<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site – Docs</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in Docs on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Aug 2024 16:06:17 -0700</lastBuildDate>
    
	  <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Deployment Architectures</title>
      <link>http://localhost:1313/proxy/arch/</link>
      <pubDate>Sun, 01 Sep 2024 09:10:49 -0700</pubDate>
      
      <guid>http://localhost:1313/proxy/arch/</guid>
      <description>
        
        
        &lt;h2&gt;Client connections and workers&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;client-connections-and-workers&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#client-connections-and-workers&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Client connections to the proxy are handled exactly the same as a normal
memcached. A dedicated thread listens for new sockets, and distributes client
connections to each worker thread in a round robin.&lt;/p&gt;
&lt;p&gt;Each worker gets a dedicated Lua VM: Lua data cannot be directly shared between
worker threads.&lt;/p&gt;
&lt;p&gt;There are no dedicated &amp;ldquo;proxy&amp;rdquo; worker threads. A worker thread may handle
cache responses or proxy requests. Lua for request handling is &lt;em&gt;only executed
in a worker thread&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;---
title: Client socket handling
---
flowchart LR
    Client[Client connection] --&gt; Accept{Listen/Accept thread}
    Accept --&gt;|round robin| Worker1[Worker thread]
    Accept --&gt;|round robin| Worker2[Worker thread]
    Accept --&gt;|round robin| Worker3[Worker thread]&lt;/pre&gt;&lt;h2&gt;Backend requests and connections&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;backend-requests-and-connections&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#backend-requests-and-connections&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Backend requests may either come directly from a worker thread (if &lt;code&gt;iothread = false&lt;/code&gt; in pool settings). Each worker thread has a dedicated TCP connection to
each backend server.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart TD         
    subgraph worker2
    direction LR                                                                                                                         
    Worker{Worker thread} &lt;--&gt; Backend1[Backend server]
    Worker &lt;--&gt; Backend2[Backend server]
    Worker &lt;--&gt; Backend3[Backend server]
    end
    subgraph worker1
    direction LR
    Worker2{Worker thread} &lt;--&gt; Backend11[Backend server]
    Worker2 &lt;--&gt; Backend12[Backend server]
    Worker2 &lt;--&gt; Backend13[Backend server]
    end&lt;/pre&gt;&lt;p&gt;Or, if &lt;code&gt;iothread = true&lt;/code&gt;, workers will submit requests to a dedicated IO
thread, which will batch up requests to the same backend if possible. In this
mode we will use fewer total TCP sockets.&lt;/p&gt;
&lt;p&gt;This IO thread does not contain any Lua processing, it is pure C and only
handles the networking and protocol parsing on response data.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart LR
    Worker1[Worker thread] &lt;--&gt; IO{IO thread}
    Worker2[Worker thread] &lt;--&gt; IO
    IO &lt;--&gt; Backend1[Backend server]
    IO &lt;--&gt; Backend2[Backend server]
    IO &lt;--&gt; Backend3[Backend server]&lt;/pre&gt;&lt;h2&gt;Configuration load and reload&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;configuration-load-and-reload&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#configuration-load-and-reload&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A separate Lua configuration thread processes the config file, executes &lt;code&gt;mcp_config_pools&lt;/code&gt; and creates all of the backend and pool objects. It then copies the configuration to each worker VM. The worker VM&amp;rsquo;s each execute &lt;code&gt;mcp_config_routes&lt;/code&gt; on load; it is important to keep this function lightweight.&lt;/p&gt;
&lt;p&gt;The configuration thread has its own dedicated Lua VM. It shares data to the
worker VM&amp;rsquo;s by doing a specialized cross-VM data copy of the results returned
from &lt;code&gt;mcp_config_pools()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The load process runs against one worker thread at a time. First, because the
configuration thread has to copy some data into each worker, and second to
minimize the latency impact of reload.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart LR
    Config{Configuration thread} --&gt;|first| Worker1[Worker thread]
    Config --&gt;|second| Worker2[Worker thread]
    Config --&gt;|third| Worker3[Worker thread]&lt;/pre&gt;&lt;hr&gt;
&lt;h2&gt;Client and backend request batching&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;client-and-backend-request-batching&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#client-and-backend-request-batching&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Batching client requests&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;batching-client-requests&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#batching-client-requests&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Multiple requests from a single client socket may be batch processed. This
improves performance by reducing the number of syscalls and context switches,
but has some caveats.&lt;/p&gt;
&lt;p&gt;For the proxy, &lt;em&gt;client request batching&lt;/em&gt; works exactly the same as a normal
memcached, as the code is shared. They differ when it comes time to return a
response to the client.&lt;/p&gt;
&lt;p&gt;For example, lets take client A and proxy P:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client A makes a TCP write() call with a buffer containing three requests at
the same time:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;get foo\r\n
get bar\r\n
get baz\r\n&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;A worker thread on proxy P now gets woken up with a notification that data is ready on the socket for client A.&lt;/li&gt;
&lt;li&gt;The proxy now issues a read() against the socket, for up to &lt;code&gt;READ_BUFFER_SIZE&lt;/code&gt; (16kb) bytes.&lt;/li&gt;
&lt;li&gt;The read buffer is large enough to hold all three requests, and the proxy begins to parse the buffer.&lt;/li&gt;
&lt;li&gt;The proxy first executes &lt;code&gt;get foo&lt;/code&gt;, which resolves to backend &lt;code&gt;b1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The request is now queued to be executed by &lt;code&gt;b1&lt;/code&gt;, and &lt;code&gt;get foo&lt;/code&gt; is now suspended while waiting for a response.&lt;/li&gt;
&lt;li&gt;The proxy &lt;em&gt;immediately moves to the next request&lt;/em&gt;, starting &lt;code&gt;get bar&lt;/code&gt;. Which goes to backend &lt;code&gt;b2&lt;/code&gt; and so on.&lt;/li&gt;
&lt;li&gt;The process repeats until the proxy runs out of client requests or hits a yield limit (see below)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now that the proxy has nothing to return to Client A, because it is waiting on
three parallel requests to different backends. It will suspend the processing
of Client A.&lt;/p&gt;
&lt;p&gt;Once &lt;em&gt;all queued responses are collected&lt;/em&gt; Proxy P will resume and send all
results back to Client A. This means the Time To First Byte for the response
to Client A will be the speed of the slowest backend server.&lt;/p&gt;
&lt;p&gt;If more requests arrive at Client A&amp;rsquo;s socket while it is already suspended,
those requests cannot start until the original set completes.&lt;/p&gt;
&lt;p&gt;NOTE: This will likely change in future versions; allowing the proxy to return
partial responses when safe, and start new requests if they arrive while
former ones are waiting.&lt;/p&gt;
&lt;p&gt;In many cases there is either exactly one request arriving at a time, or all
backends are roughly the same speed: memcached does not typically do
processing before returning results, so all requests take the same amount of
time. In most cases performance is acceptable.&lt;/p&gt;
&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;sequenceDiagram
    Participant Client
    Participant Proxy Worker
    Participant Backend
    Client-&gt;&gt;Proxy Worker: 3x GET key\r\n
    Note right of Proxy Worker: Process incoming requests
    Note right of Proxy Worker: Queue backend requests
    Proxy Worker-&gt;&gt;Backend: 3x GET etc\r\n
    Note right of Proxy Worker: Send all GETs to backends
    Backend-&gt;&gt;Proxy Worker: 3x VALUE etc\r\n
    Note right of Proxy Worker: Ready to respond to Client
    Proxy Worker-&gt;&gt;Client: 3x VALUE etc\r\n&lt;/pre&gt;&lt;h3&gt;Batching backend requests&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;batching-backend-requests&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#batching-backend-requests&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In comparison to Client socket handling detailed above, &lt;em&gt;backend sockets&lt;/em&gt; use
full bidirectional streaming.&lt;/p&gt;
&lt;p&gt;Take a Backend B that has received three requests from different clients
at the same time:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;get foo\r\n
get bar\r\n
get baz\r\n&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;Backends do no processing on requests that are queued for it: all they need to
do is write these requests out to the socket connected to the backend server.
Here we will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queue up all three requests into a single write syscall&lt;/li&gt;
&lt;li&gt;Wait for responses&lt;/li&gt;
&lt;li&gt;Read up to &lt;code&gt;READ_BUFFER_SIZE&lt;/code&gt; (16kb) from the socket at once&lt;/li&gt;
&lt;li&gt;Begin processing each response in a loop:
&lt;ul&gt;
&lt;li&gt;Parse the response, if okay return the response object to its original client.&lt;/li&gt;
&lt;li&gt;If there is another response ready in the buffer, immediately process it.&lt;/li&gt;
&lt;li&gt;Once complete, go back to waiting.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If more requests arrive while Backend B is waiting for respones, it will
immediately write() them to the same socket. If the socket buffer is full, it
will wait until it can write more. Thus new requests are not delayed while
waiting for a previous batch to complete.&lt;/p&gt;
&lt;p&gt;Responess are immediately sent to their respective Client&amp;rsquo;s as they&amp;rsquo;re read
off of the socket, so there is no internal delay for waiting on a batch to
process.&lt;/p&gt;
&lt;p&gt;If Backend B breaks for some reason, the queue is immediately drained and
error responses are sent to all waiting Client&amp;rsquo;s.&lt;/p&gt;
&lt;p&gt;TODO: chart.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Backend connection failure detection&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;backend-connection-failure-detection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#backend-connection-failure-detection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h2&gt;Configuration reload&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;configuration-reload&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#configuration-reload&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h2&gt;Backend and Pool object management&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;backend-and-pool-object-management&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#backend-and-pool-object-management&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Backend object lifecycle&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;backend-object-lifecycle&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#backend-object-lifecycle&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The below API only creates a description of a backend internally. Actual
backend objects are created when &lt;code&gt;mcp.pool()&lt;/code&gt; is called. This allows us to
track the lifecycle of backends with the lifecycle of pools.&lt;/p&gt;
&lt;p&gt;IE: If pool A is created with backends 1 and 2, those backends are guaranteed
to live as long as pool A lives. If pools A and B share the same backends,
reference counting is used on the backends. Both pools A and B would need to
be de-allocated before backends 1 and 2 are removed.&lt;/p&gt;
&lt;p&gt;This is partly done for performance reasons: since we don&amp;rsquo;t have to change the
reference count or lock backends 1 and 2 when requests are being executed.
Basically:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A backend can only be queried if a pool object still exists.&lt;/li&gt;
&lt;li&gt;Pool objects &lt;em&gt;cannot be deallocated&lt;/em&gt; anywhere when a request is being
handled.&lt;/li&gt;
&lt;li&gt;Pools use a higher level memory management.&lt;/li&gt;
&lt;li&gt;Thus we can use everything without reference counting or locking at &lt;em&gt;request
time&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Request flow&lt;/h1&gt;&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart TD
    A[&#34;get foo/username&#34;] --&gt;B[&#34;is there a get hook?&#34;]
    B --&gt; |yes|C[check map for a &#39;foo&#39; func]
    B --&gt; |no|D[respond from local cache]
    C --&gt; |yes|E[is a req slot free?]
    E --&gt; |yes|F[&#34;run func(req)&#34;]
    E --&gt; |no|G[&#34;generate a func slot&#34;]
    G --&gt; F
    F --&gt; H[execute against one or more pools]
    H --&gt; I[pool: map key against list of backends]
    I --&gt; J[is backend on worker thread or background thread?]
    J --&gt; |worker|K[execute from within same thread]
    J --&gt; |background|L[ship request to shared BG thread]
    K --&gt; M[remote memcached processes request]
    L --&gt; N[BG thread batches all pending requests]
    N --&gt; M 
    M --&gt; O[response received from remote mc]
    O --&gt; P[&#34;VALUE etc response sent to client&#34;]&lt;/pre&gt;&lt;p&gt;Almost all of the actual processing is done outside of Lua, with Lua used to primarily manage configuration as code.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Usage Examples</title>
      <link>http://localhost:1313/proxy/examples/</link>
      <pubDate>Sun, 01 Sep 2024 09:08:32 -0700</pubDate>
      
      <guid>http://localhost:1313/proxy/examples/</guid>
      <description>
        
        
        &lt;p&gt;The memcached proxy is a flexible and lightweight system with few
dependencies. Any memcached binary can be a proxy, a cache server, or both.
This allows us to adjust easily based on application requirements.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Proxy Middleware Machine&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;proxy-middleware-machine&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#proxy-middleware-machine&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart TD
    A[Application] --&gt;|memcached protocol|B
    B{Memcached Proxy}
    B --&gt;D[Memcached]
    B --&gt;E[Memcached]
    B --&gt;F[Memcached]&lt;/pre&gt;&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart TD
    A[Application] --&gt;|memcached protocol|B
    B{Memcached Proxy} --&gt;foo1
    B --&gt;bar1
subgraph foo1 [key prefix &#39;foo/&#39;]
    FN1[memcached]
    FN2[memcached]
    FN3[memcached]
end
subgraph bar1 [key prefix &#39;bar/&#39;]
    BN1[memcached]
    BN2[memcached]
    BN3[memcached]
end&lt;/pre&gt;&lt;h3&gt;Middleware Architecture&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;middleware-architecture&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#middleware-architecture&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The &amp;ldquo;middleware machine&amp;rdquo; deployment approach is probably a familiar design: a
machine or pool of machines sit inbetween the application servers and cache
storage nodes. This design allows centralization of pool configurations,
simplifying cache clients, and centralizing the maintenance of proxy servers.&lt;/p&gt;
&lt;p&gt;Each cache request must first be processed by the proxy server. The proxy will
then fan-out sets of requests as necessary to backend servers and return the
results back to the client.&lt;/p&gt;
&lt;h3&gt;Middleware Pros&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;middleware-pros&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#middleware-pros&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Cache configuration and cache pool maintenance is centralized.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This allows a team to maintain a complex cache structure without disturbing or
having to modify, restart, or push configuration to application servers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cache client complexity is moved to the proxy layer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most memcached clients are &amp;ldquo;full featured&amp;rdquo;: meaning they take a configuration
with a list of servers, run hash calculations, and spread requests out to
backend servers directly. This is typically the best approach as it has the
highest level of performance.&lt;/p&gt;
&lt;p&gt;However it can be useful to instead have a &lt;em&gt;very thin&lt;/em&gt; memcached client.
Especially if you need complex features, having to update all application
programs to make changes can be a large burden on teams. This can lead to
stagnation and people try to avoid making changes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Hot key caches&amp;rdquo; are possible within the proxy layer to aid performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since every proxy is also a normal memcached, it is possible to create an
&amp;ldquo;L1/L2&amp;rdquo; layered cache. The details will depend highly on your needs, but doing
so can remove the added latency and CPU overhead of having extra network
requests added from having to first go through the proxy.&lt;/p&gt;
&lt;h3&gt;Middleware Cons&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;middleware-cons&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#middleware-cons&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fetching data requires going through the proxy first, adding roundtrips and
latency.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Without the proxy, a request/response to memcached requires:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write request from client&lt;/li&gt;
&lt;li&gt;Read request from memcached&lt;/li&gt;
&lt;li&gt;Write response from memcached&lt;/li&gt;
&lt;li&gt;Read response from client&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With the proxy, extra latency steps are involved:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write request from client&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;.. wait for network..&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Read request from proxy&lt;/li&gt;
&lt;li&gt;Write request from proxy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;.. wait for netork..&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Read request from memcached&lt;/li&gt;
&lt;li&gt;Write response from memcached&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;.. wait for network..&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Read response from proxy&lt;/li&gt;
&lt;li&gt;Write response from proxy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;.. wait for network..&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Read response from client&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note that this can vary a lot by implementation: Hot caches in the proxy, or
fetching from remote pools on miss, can still improve overall performance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance is not ideal, especially for large caches with high bandwidth usage.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If all involved machines are fast enough, high request rates can be
manageable. However if cache data is very large (hundreds of kilobytes to
megabytes), and the number of proxies is fewer than the number of cache
servers, you can quickly run out of bandwidth.&lt;/p&gt;
&lt;p&gt;A non obvious benefit of memcached is that its distributed direct-to-client
nature means the total bandwidth capacity of the pool scales linearly with the
number of servers in the pool.&lt;/p&gt;
&lt;p&gt;If you need 10 servers to hold all of your cache data, but only need 2 proxies
to &amp;ldquo;front&amp;rdquo; them, your bandwidth is limited by the proxies, not the backend
servers.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Application Sidecar&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;application-sidecar&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#application-sidecar&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart TD
subgraph app [Application Host]
  App[Application] --&gt;|simplified memcached protocol| Prox{Memcached Proxy}
end
  Prox --&gt; foo
subgraph foo [key prefix &#39;foo/&#39;]
  FN1[memcached]
  FN2[memcached]
  FN3[memcached]
end
  Prox --&gt; bar
subgraph bar [key prefix &#39;bar/&#39;]
  BN1[memcached]
  BN2[memcached]
  BN3[memcached]
end&lt;/pre&gt;&lt;h3&gt;Sidecar Architecture&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;sidecar-architecture&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sidecar-architecture&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In a &amp;ldquo;sidecar&amp;rdquo; style deployment, each application server runs a proxy
co-located on its host. This can be by binary deployment, container, and so
on.&lt;/p&gt;
&lt;p&gt;This provides a compromise between having full &lt;em&gt;border proxies&lt;/em&gt; and having
&lt;em&gt;fat clients&lt;/em&gt; directly inside the application. The sidecar can abstract pool
configuration, fan-out, key distribution, upgrading the proxy, etc, away from
an application client, simplifying maintenance.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also possible to mix these approaches: some applications may work better
with a local sidecar (high bandwidth) and some might use a centralized pool
(less cache usage, so simplify deployments).&lt;/p&gt;
&lt;h3&gt;Sidecar Pros&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;sidecar-pros&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sidecar-pros&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Scales similar to memcached without a proxy: no limits on bandwidth or
request rate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More work than maintaining a small centralized pool, but still allows
proxies to be updated without adjusting an application server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allows applications to use simplified clients still.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Sidecar Cons&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;sidecar-cons&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sidecar-cons&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Must manage deployments on every application server, instead of one pool
centrally.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add some CPU overhead to application servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Still requires extra system calls: between client and local proxy, then out
to remote servers and back.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Generally the overhead of local connections is low, but this must be verified
because &amp;ldquo;container systems&amp;rdquo; can add significant overhead.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Cache Layering Proxy&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cache-layering-proxy&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cache-layering-proxy&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid hx-mt-6&#34;&gt;flowchart TD
  App[Application] --&gt; foo
subgraph foo [cache pool]
  C1[memcached]
  C2[memcached]
  C3[memcached]
end
foo --&gt; rem
subgraph rem [remote pool]
  R1[memcached]
  R2[memcached]
  R3[memcached]
end&lt;/pre&gt;&lt;h3&gt;Cache Layering Architecture&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cache-layering-architecture&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cache-layering-architecture&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A layered cache is an architecture where a pre-existing pool of memcached
servers is replaced by proxy nodes. A standard client is used, which hashes
keys and distributes them across proxy nodes. The nodes themselves then may
execute extra work.&lt;/p&gt;
&lt;p&gt;This extra work could be copying &lt;code&gt;set&lt;/code&gt; commands to remote pools, fetching from
remote pools on a miss, or fetching from remote pools for specific namespaces.
This makes sense if you want to store long tail cold data on cheaper servers,
or if you have some key namespaces which have a long tail of data, but not a
high request rate.&lt;/p&gt;
&lt;p&gt;It can also be a good gateway into deploying the proxy into an existing
memcached pool.&lt;/p&gt;
&lt;h3&gt;Cache Layering Pros&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cache-layering-pros&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cache-layering-pros&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you already have memcached deployed but want to add redundancy,
expansion, or so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep your most commonly used cache data in the top layer for good
performance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cache Layering Cons&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cache-layering-cons&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cache-layering-cons&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Needs more complex application clients.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration of pools needs to be managed in two places (application
clients, memcached proxies)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Use Case Examples&lt;/h1&gt;&lt;h2&gt;Simplifying and Unifying Cache Clients&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;simplifying-and-unifying-cache-clients&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#simplifying-and-unifying-cache-clients&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;Distributing data by usage&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;distributing-data-by-usage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#distributing-data-by-usage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;Best effort data redundancy&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;best-effort-data-redundancy&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#best-effort-data-redundancy&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;Transparent upgrades&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;transparent-upgrades&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#transparent-upgrades&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;Transparent pool resizing&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;transparent-pool-resizing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#transparent-pool-resizing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;Protocol translation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;protocol-translation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#protocol-translation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes127/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes127/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.2.7 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-127-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-127-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2009-04-03 Fri&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.2.7.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.2.7.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;With the release of memcached 1.2.7, the 1.2 tree is now officially in
maintenance mode. Only bugfixes and very minor improvements will be
added to the 1.2 tree. All development is now happening on the 1.3
tree. Efforts are now being made to stabilize the 1.3 tree into a 1.4
series stable release. Please help test :)&lt;/p&gt;
&lt;p&gt;1.2.7 appears to be a good, stable release, and is a decent farewell
to the codebase that has helped scale many companies.&lt;/p&gt;
&lt;p&gt;-Dormando&lt;/p&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;UDP/TCP can be disabled by setting their port to 0&lt;/li&gt;
&lt;li&gt;Can set the listen backlog on the commandline (-b)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Handful of new stats.&lt;/p&gt;
&lt;p&gt;==== evicted_time ====&lt;/p&gt;
&lt;p&gt;Under &amp;lsquo;stats items&amp;rsquo;, this lists the time since the last evicted object was
last accessed. If an object was evicted a day after it had last been fetched,
you would see 86400 as the time.&lt;/p&gt;
&lt;p&gt;==== other stats also noted in 1.3.3 ====&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;accepting_conns&lt;/li&gt;
&lt;li&gt;listen_disabled_num&lt;/li&gt;
&lt;li&gt;cmd_flush&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;other improvements also noted in 1.3.3&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;other-improvements-also-noted-in-133&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-improvements-also-noted-in-133&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;missing key debugging.&lt;/li&gt;
&lt;li&gt;tail repair.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;tail repair&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;tail-repair&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#tail-repair&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Tail repair is an important stability fix, and is worth repeating here.&lt;/p&gt;
&lt;p&gt;There is a rare, unidentified reference leak that causes a slab to be
full of invalid objects that cannot be evicted via the LRU nor will
they expire on their own.&lt;/p&gt;
&lt;p&gt;Tail repair is a strategy by which we forcefully evict objects that
are marked as ``in-use&amp;rsquo;&amp;rsquo; (that is, in-flight or otherwise being used),
but haven&amp;rsquo;t been accessed in a long time (currently three hours).&lt;/p&gt;
&lt;p&gt;There is an additional stat that comes along with this (tailrepairs on
a slab) that will allow you to detect that this condition has occurred
on one of your slabs.&lt;/p&gt;
&lt;h3&gt;Bugfixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bugfixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bugfixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;use a dedicated accept/dispatch thread.&lt;/li&gt;
&lt;li&gt;prevent starvation by busy threads.&lt;/li&gt;
&lt;li&gt;startup crash fix under certain distros.&lt;/li&gt;
&lt;li&gt;better errors/warnings on the listen code.&lt;/li&gt;
&lt;li&gt;fix listen errors in odd setups (no network, ipv4 only, etc).&lt;/li&gt;
&lt;li&gt;ensure udp works in non-threaded mode.&lt;/li&gt;
&lt;li&gt;update CAS on incr/decr properly.&lt;/li&gt;
&lt;li&gt;incr/decr bugfixes.&lt;/li&gt;
&lt;li&gt;improved tests&lt;/li&gt;
&lt;li&gt;make &amp;lsquo;stats slabs&amp;rsquo; used_checks report correctly&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.2.6. This is not a
measure of the amount of effort per commit, just the total.&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    18  dormando
    11  Dustin Sallings
     4  Brian Aker
     1  Chris Goffinet
     1  Evan Klitzke
     1  Jonathan Bastien-Filiatrault
     1  Ricky Zhou&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes128/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes128/</guid>
      <description>
        
        
        &lt;h3&gt;Release Notes for 1.2.8&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;release-notes-for-128&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#release-notes-for-128&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;There were no release notes for 1.2.8, as it was a quick turnaround fix for an issue that had come up after 1.2.7.&lt;/p&gt;
&lt;p&gt;From the email announcement about 1.2.8:&lt;/p&gt;
&lt;p&gt;A few bugs were fixed that warranted an immediate release of memcached  1.2.8. If you are running memcached prior to 1.2.7, please skip 1.2.7 and  upgrade straight to 1.2.8.
&lt;em&gt;Please note&lt;/em&gt; that the critical bug noted below only affects memcached  binaries built with &amp;ndash;enable-threads. While highly recommended, this is  not the default in the 1.2 series. It is the default in 1.3.&lt;/p&gt;
&lt;p&gt;[http://groups.google.com/group/memcached/browse_thread/thread/ff96a9b88fb5d40e email about 1.2.8]&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes132/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes132/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.3 Beta 2 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-13-beta-2-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-13-beta-2-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2009-03-11 Wed&lt;/p&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Binary Protocol&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;binary-protocol&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#binary-protocol&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A new feature that brings new features.  We now have goodness like
CAS-everywhere (e.g. delete), silent, but verifiable mutation
commands, and many other wonders.&lt;/p&gt;
&lt;p&gt;Note that the original protocol is &lt;em&gt;not&lt;/em&gt; deprecated.  It will be
supported indefinitely, although some new features may only be
available in the binary protocol.&lt;/p&gt;
&lt;p&gt;==== Client Availability ===&lt;/p&gt;
&lt;p&gt;Many clients for the binary protocol are available.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;libmemcached supports just about anything you can do with a memcached
protocol and is the foundation for many clients in many different
languages (which you can find linked from the project page).&lt;/p&gt;
&lt;p&gt;Project page:  &lt;a href=&#34;http://tangent.org/552/libmemcached.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://tangent.org/552/libmemcached.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;spymemcached has very good text and binary protocol support over IPv4
and IPv6 with a quite comprehensive test suite.&lt;/p&gt;
&lt;p&gt;Project page:  &lt;a href=&#34;http://code.google.com/p/spymemcached/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://code.google.com/p/spymemcached/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protocol Spec&lt;/p&gt;
&lt;p&gt;NIH problem?  Go write your own client.  :)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cloud.github.com/downloads/dustin/memcached/protocol-binary.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://cloud.github.com/downloads/dustin/memcached/protocol-binary.txt&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Lots of effort has gone into increasing performance.&lt;/p&gt;
&lt;p&gt;There is no longer a build-time distinction between a single-threaded
and multi-threaded memcached.  If you want a single-threaded
memcached, ask for one thread (though there&amp;rsquo;ll still be utility
threads and other such things in the background).  This change lets us
focus on a future where multiple cores can be saturated for servicing
requests.&lt;/p&gt;
&lt;p&gt;Facebook-inspired contention reduction with per-thread stat collection
and the Facebook connection dispatch and thread starvation prevention
contributions helped our scalability.&lt;/p&gt;
&lt;p&gt;Lock analysis also showed us that we had quite a bit of contention on
hash table expansion which has been moved into its own thread, greatly
improving the scalability on multicore hardware.&lt;/p&gt;
&lt;p&gt;A variety of smaller things also shook out of performance testing and
analysis.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s also a memory optimization for users who don&amp;rsquo;t actually make
use of CAS.  Running memcached with -C disables the use of CAS
resulting in a savings of about eight bytes per item.  If you have big
caches, and don&amp;rsquo;t use CAS, this can lead to a considerable savings.&lt;/p&gt;
&lt;h3&gt;Stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;There are several new stats and some new ways to look at older stats.&lt;/p&gt;
&lt;h4&gt;New Stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Delete&lt;/p&gt;
&lt;p&gt;The global stats now contain statistics on deletion.&lt;/p&gt;
&lt;p&gt;delete_hits refers to the number of times a deletion command was
issued which resulted in a modification of the cache while
delete_misses refers to the number of times a deletion command was
issued which had no effect due to a key mismatch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Incr/Decr&lt;/p&gt;
&lt;p&gt;Incr and decr each have a pair of stats showing when a
successful/unsuccessful incr occurred.  incr_hits, incr_misses,
decr_hits, and decr_misses show where such mutations worked and where
they failed to find an existing object to mutate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAS&lt;/p&gt;
&lt;p&gt;CAS stats are tracked in three different ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cas_hits&lt;/p&gt;
&lt;p&gt;Number of attempts to CAS in a new value that worked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cas_misses&lt;/p&gt;
&lt;p&gt;Number of attempts to CAS in a value where the key was not found.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cas_badval&lt;/p&gt;
&lt;p&gt;Number of attempts to CAS in a value where the CAS failed due to the
object changing between the gets and the update.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;slab class evicted time&lt;/p&gt;
&lt;p&gt;Per slab class, you can now see how recently accessed the most recent
evicted data was.  This is a useful gauge to determine eviction
velocity on a slab so you can know whether evictions are healthy or if
you&amp;rsquo;ve got a problem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;More Granular Stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;more-granular-stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#more-granular-stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Where possible, stats are now tracked individually by slab class.  The
following stats are available on a per-slab-class basis (via &amp;ldquo;stats slabs&amp;rdquo;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get_hits&lt;/li&gt;
&lt;li&gt;cmd_set&lt;/li&gt;
&lt;li&gt;delete_hits&lt;/li&gt;
&lt;li&gt;incr_hits&lt;/li&gt;
&lt;li&gt;decr_hits&lt;/li&gt;
&lt;li&gt;cas_hits&lt;/li&gt;
&lt;li&gt;cas_badval&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(misses are obviously not available as they refer to a non-existent item)&lt;/p&gt;
&lt;h4&gt;Removed stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;removed-stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#removed-stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&amp;ldquo;stats malloc&amp;rdquo; and &amp;ldquo;stats maps&amp;rdquo; have been removed.&lt;/p&gt;
&lt;p&gt;If you depended on these commands for anything, please let us know so
we can bring them back in a more maintainable way.&lt;/p&gt;
&lt;h3&gt;Bug Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bug-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bug-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Build fixes on ubuntu (gcc and icc) and FreeBSD&lt;/li&gt;
&lt;li&gt;bad interaction with cas + incr (bug 15)&lt;/li&gt;
&lt;li&gt;setuid failures are reported properly at daemonization time&lt;/li&gt;
&lt;li&gt;decr overflow causing unnecessary truncation to 0 (bug 21)&lt;/li&gt;
&lt;li&gt;failure to bind on Linux with no network (i.e. laptop dev)&lt;/li&gt;
&lt;li&gt;some memcached-tool cleanup&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Development Info&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;development-info&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#development-info&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;We&amp;rsquo;ve added a bunch of tests and new code coverage reports.&lt;/p&gt;
&lt;p&gt;All included code in this release has been tested against the
following platforms (using the in-tree test suite):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ubuntu 8.10 (64-bit, both gcc and icc)&lt;/li&gt;
&lt;li&gt;ubuntu 8.04 (32-bit)&lt;/li&gt;
&lt;li&gt;OS X 10.5 (ppc and intel)&lt;/li&gt;
&lt;li&gt;OpenSolaris 5.11 x86 (with and without dtrace)&lt;/li&gt;
&lt;li&gt;FreeBSD 7 x86&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Feedback&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;feedback&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feedback&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Please try this version.  Make it suffer.  Report feedback to the list
or file bugs as you find them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mailing List:  [http://groups.google.com/group/memcached]&lt;/li&gt;
&lt;li&gt;Issue Tracker:  [https://github.com/memcached/memcached/issues/list]&lt;/li&gt;
&lt;li&gt;IRC:  #memcached on freenode&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.2.6.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.2.6..1.3.2&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  [https://github.com/memcached/memcached/wiki/DevelopmentRepos]&lt;/li&gt;
&lt;li&gt;Web View: [http://github.com/dustin/memcached/commits/1.3.2]&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;  104  Dustin Sallings
   49  Trond Norbye
   32  Toru Maesaka
   31  dormando
    8  Steve Yen
    7  hachi
    6  Aaron Stone
    6  Brian Aker
    4  Victor Kirkebo
    2  Ricky Zhou
    1  Jonathan Bastien-Filiatrault
    1  Evan Klitzke
    1  Eric Lambert&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes133/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes133/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.3 Beta 3 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-13-beta-3-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-13-beta-3-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2009-04-03 Fri&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.3.3.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.3.3.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Can set listen backlog on the commandline.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;can-set-listen-backlog-on-the-commandline&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#can-set-listen-backlog-on-the-commandline&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Prevent connection refused during connection storms at the cost of
kernel memory.&lt;/p&gt;
&lt;h4&gt;stats settings&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;stats-settings&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#stats-settings&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Show all current server settings (useful for troubleshooting as well
as internal verification).&lt;/p&gt;
&lt;h3&gt;Bug fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bug-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bug-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Alignment bug in binary stats (bug26)&lt;/li&gt;
&lt;li&gt;Occasional buffer overflow in stats (bug27)&lt;/li&gt;
&lt;li&gt;Try to recycle memory more aggressively. (bug14)&lt;/li&gt;
&lt;li&gt;incr validation (bug31)&lt;/li&gt;
&lt;li&gt;64-bit incr/decr delta fixes (bug21)&lt;/li&gt;
&lt;li&gt;ascii UDP set (bug36)&lt;/li&gt;
&lt;li&gt;stats slabs&amp;rsquo; used chunks (bug29)&lt;/li&gt;
&lt;li&gt;stats reset should reset item stats, eviction counters, etc&amp;hellip; (bug22)&lt;/li&gt;
&lt;li&gt;Fix all stat buffer management&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Misc&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;misc&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#misc&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;More tests&lt;/li&gt;
&lt;li&gt;More/better documentation&lt;/li&gt;
&lt;li&gt;Code cleanup&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Stable fixes from Dormando&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;stable-fixes-from-dormando&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#stable-fixes-from-dormando&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;New Stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;==== accepting_conns ====&lt;/p&gt;
&lt;p&gt;1 or 0 to indicate whether the server is currently accepting
connections or not.&lt;/p&gt;
&lt;p&gt;The server will stop accepting connections when it has as many as it&amp;rsquo;s
configured to take.&lt;/p&gt;
&lt;p&gt;==== listen_disabled_num ====&lt;/p&gt;
&lt;p&gt;The number of times socket listeners were disabled due to hitting the
connection limit.&lt;/p&gt;
&lt;p&gt;==== cmd_flush ====&lt;/p&gt;
&lt;p&gt;The number of times the flush command was issued.&lt;/p&gt;
&lt;h4&gt;missing key debugging&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;missing-key-debugging&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#missing-key-debugging&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;With verbosity enabled, you can see &lt;em&gt;why&lt;/em&gt; objects were not found.  In
many cases, an item exists under a given key, but is considered
invalid due to lazy expiration or flush.&lt;/p&gt;
&lt;h4&gt;tail repair&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;tail-repair&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#tail-repair&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;There is a rare, unidentified reference leak that causes a slab to be
full of invalid objects that cannot be evicted via the LRU nor will
they expire on their own.&lt;/p&gt;
&lt;p&gt;Tail repair is a strategy by which we forcefully evict objects that
are marked as ``in-use&amp;rsquo;&amp;rsquo; (that is, in-flight or otherwise being used),
but haven&amp;rsquo;t been accessed in a long time (currently three hours).&lt;/p&gt;
&lt;p&gt;There is an additional stat that comes along with this (tailrepairs on
a slab) that will allow you to detect that this condition has occurred
on one of your slabs.&lt;/p&gt;
&lt;h4&gt;socket listen bugs&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;socket-listen-bugs&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#socket-listen-bugs&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;There were some issues listening to sockets on machines with different
network interface configurations (i.e. no network, only ipv4, only
ipv6, etc&amp;hellip;).&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.3.2.  Please
refer to the 1.3.2 release notes for more info:&lt;/p&gt;
&lt;p&gt;ReleaseNotes133&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    28 Dustin Sallings
     8 Trond Norbye
     6 dormando
     5 Brad Fitzpatrick
     4 Steve Yen
     1 Eric Lambert
     1 Clinton Webb
     1 Chris Goffinet&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes140/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes140/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.0 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-140-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-140-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date:  Thu July 9, 2009&lt;/p&gt;
&lt;h3&gt;1 Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.0.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.0.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Binary Protocol&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;binary-protocol&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#binary-protocol&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A new feature that brings new features.  We now have goodness like
CAS-everywhere (e.g. delete), silent, but verifiable mutation
commands, and many other wonders.&lt;/p&gt;
&lt;p&gt;Note that the original protocol is &lt;em&gt;not&lt;/em&gt; deprecated.  It will be
supported indefinitely, although some new features may only be
available in the binary protocol.&lt;/p&gt;
&lt;p&gt;==== Client Availability ====&lt;/p&gt;
&lt;p&gt;Many clients for the binary protocol are available.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;libmemcached supports just about anything you can do with a memcached
protocol and is the foundation for many clients in many different
languages (which you can find linked from the project page).&lt;/p&gt;
&lt;p&gt;Project page:  &lt;a href=&#34;http://tangent.org/552/libmemcached.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://tangent.org/552/libmemcached.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;spymemcached has very good text and binary protocol support over IPv4
and IPv6 with a quite comprehensive test suite.&lt;/p&gt;
&lt;p&gt;Project page:  &lt;a href=&#34;http://code.google.com/p/spymemcached/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://code.google.com/p/spymemcached/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protocol Spec&lt;/p&gt;
&lt;p&gt;NIH problem?  Go write your own client.  :)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cloud.github.com/downloads/memcached/memcached/protocol-binary.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://cloud.github.com/downloads/memcached/memcached/protocol-binary.txt&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Lots of effort has gone into increasing performance.&lt;/p&gt;
&lt;p&gt;There is no longer a build-time distinction between a single-threaded
and multi-threaded memcached.  If you want a single-threaded
memcached, ask for one thread (though there&amp;rsquo;ll still be utility
threads and other such things in the background).  This change lets us
focus on a future where multiple cores can be saturated for servicing
requests.&lt;/p&gt;
&lt;p&gt;Facebook-inspired contention reduction with per-thread stat collection
and the Facebook connection dispatch and thread starvation prevention
contributions helped our scalability.&lt;/p&gt;
&lt;p&gt;Lock analysis also showed us that we had quite a bit of contention on
hash table expansion which has been moved into its own thread, greatly
improving the scalability on multicore hardware.&lt;/p&gt;
&lt;p&gt;A variety of smaller things also shook out of performance testing and
analysis.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s also a memory optimization for users who don&amp;rsquo;t actually make
use of CAS.  Running memcached with -C disables the use of CAS
resulting in a savings of about eight bytes per item.  If you have big
caches, and don&amp;rsquo;t use CAS, this can lead to a considerable savings.&lt;/p&gt;
&lt;h4&gt;Stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;There are several new stats and some new ways to look at older stats.&lt;/p&gt;
&lt;p&gt;==== New Stats ====&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;stats settings&lt;/p&gt;
&lt;p&gt;Show all current server settings (useful for troubleshooting as well
as internal verification).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delete&lt;/p&gt;
&lt;p&gt;The global stats now contain statistics on deletion.&lt;/p&gt;
&lt;p&gt;delete_hits refers to the number of times a deletion command was
issued which resulted in a modification of the cache while
delete_misses refers to the number of times a deletion command was
issued which had no effect due to a key mismatch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Incr/Decr&lt;/p&gt;
&lt;p&gt;Incr and decr each have a pair of stats showing when a
successful/unsuccessful incr occurred.  incr_hits, incr_misses,
decr_hits, and decr_misses show where such mutations worked and where
they failed to find an existing object to mutate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAS&lt;/p&gt;
&lt;p&gt;CAS stats are tracked in three different ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cas_hits&lt;/p&gt;
&lt;p&gt;Number of attempts to CAS in a new value that worked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cas_misses&lt;/p&gt;
&lt;p&gt;Number of attempts to CAS in a value where the key was not found.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cas_badval&lt;/p&gt;
&lt;p&gt;Number of attempts to CAS in a value where the CAS failed due to the
object changing between the gets and the update.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;slab class evicted time&lt;/p&gt;
&lt;p&gt;Per slab class, you can now see how recently accessed the most recent
evicted data was.  This is a useful gauge to determine eviction
velocity on a slab so you can know whether evictions are healthy or if
you&amp;rsquo;ve got a problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connection yield counts&lt;/p&gt;
&lt;p&gt;The -R option allows you to limit how many requests are handled in a
single trip through the network state machine.  The conn_yields stat
reports how many times this has occurred.&lt;/p&gt;
&lt;p&gt;This is most useful when you have very high rates of operations from a
single client which seems to be hogging server resources unfairly,
such as extremely large multi-get operations.  We do not expect this
to be a common situation, but this stat can help diagnose such issues
if they should occur.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;==== More Granular Stats ====&lt;/p&gt;
&lt;p&gt;Where possible, stats are now tracked individually by slab class.  The
following stats are available on a per-slab-class basis (via &amp;ldquo;stats slabs&amp;rdquo;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get_hits&lt;/li&gt;
&lt;li&gt;cmd_set&lt;/li&gt;
&lt;li&gt;delete_hits&lt;/li&gt;
&lt;li&gt;incr_hits&lt;/li&gt;
&lt;li&gt;decr_hits&lt;/li&gt;
&lt;li&gt;cas_hits&lt;/li&gt;
&lt;li&gt;cas_badval&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(misses are obviously not available as they refer to a non-existent item)&lt;/p&gt;
&lt;p&gt;==== Removed stats ====&lt;/p&gt;
&lt;p&gt;&amp;ldquo;stats malloc&amp;rdquo; and &amp;ldquo;stats maps&amp;rdquo; have been removed.&lt;/p&gt;
&lt;p&gt;If you depended on these commands for anything, please let us know so
we may suggest alternatives for you.&lt;/p&gt;
&lt;h4&gt;Misc&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;misc&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#misc&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;More tests&lt;/li&gt;
&lt;li&gt;More/better documentation&lt;/li&gt;
&lt;li&gt;Code cleanup&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bug Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bug-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bug-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Build fixes on ubuntu (gcc and icc) and FreeBSD&lt;/li&gt;
&lt;li&gt;bad interaction with cas + incr (bug 15)&lt;/li&gt;
&lt;li&gt;setuid failures are reported properly at daemonization time&lt;/li&gt;
&lt;li&gt;decr overflow causing unnecessary truncation to 0 (bug 21)&lt;/li&gt;
&lt;li&gt;failure to bind on Linux with no network (i.e. laptop dev)&lt;/li&gt;
&lt;li&gt;some memcached-tool cleanup&lt;/li&gt;
&lt;li&gt;Alignment bug in binary stats (bug26)&lt;/li&gt;
&lt;li&gt;Occasional buffer overflow in stats (bug27)&lt;/li&gt;
&lt;li&gt;Try to recycle memory more aggressively. (bug14)&lt;/li&gt;
&lt;li&gt;incr validation (bug31)&lt;/li&gt;
&lt;li&gt;64-bit incr/decr delta fixes (bug21)&lt;/li&gt;
&lt;li&gt;ascii UDP set (bug36)&lt;/li&gt;
&lt;li&gt;stats slabs&amp;rsquo; used chunks (bug29)&lt;/li&gt;
&lt;li&gt;stats reset should reset item stats, eviction counters, etc&amp;hellip; (bug22)&lt;/li&gt;
&lt;li&gt;Fix all stat buffer management&lt;/li&gt;
&lt;li&gt;Fixes for -R handling (bug61)&lt;/li&gt;
&lt;li&gt;GCC 4.4 fixes (bug60)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Development Info&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;development-info&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#development-info&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;We&amp;rsquo;ve added a bunch of tests and new code coverage reports.&lt;/p&gt;
&lt;p&gt;All included code in this release has been tested against the
following platforms (using the in-tree test suite):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ubuntu 8.10 (64-bit, both gcc and icc)&lt;/li&gt;
&lt;li&gt;ubuntu 8.04 (32-bit)&lt;/li&gt;
&lt;li&gt;ubuntu 9.10 (64-bit, gcc 4.4)&lt;/li&gt;
&lt;li&gt;OS X 10.5 (ppc and intel)&lt;/li&gt;
&lt;li&gt;OpenSolaris 5.11 x86 (with and without dtrace)&lt;/li&gt;
&lt;li&gt;Solaris 10 sparc (with and without dtrace)&lt;/li&gt;
&lt;li&gt;FreeBSD 7 x86&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Feedback&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;feedback&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#feedback&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This version is considered a stable release and has been well-tested,
but bugs are always possible.  Report feedback to the list or file
bugs as you find them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mailing List:  &lt;a href=&#34;http://groups.google.com/group/memcached&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://groups.google.com/group/memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue Tracker:  &lt;a href=&#34;https://github.com/memcached/memcached/issues/list&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/issues/list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC:  #memcached on freenode&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.2.8.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.2.8..1.4.0&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;  149  Dustin Sallings
   61  Trond Norbye
   33  Toru Maesaka
   30  dormando
   13  Steve Yen
    7  hachi
    6  Aaron Stone
    5  Brad Fitzpatrick
    4  Victor Kirkebo
    3  Eric Lambert
    2  Brian Aker
    1  Chris Goffinet
    1  Clinton Webb
    1  Matt Ingenthron
    1  Ricky Zhou
    1  Evan Klitzke&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes141/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes141/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.1 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-141-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-141-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2009-08-29 Sat&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.1.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.1.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a maintenance release consisting primarily of bug fixes.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Criticial Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;criticial-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#criticial-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Boundary condition during pipelined decoding caused crash (bug72)&lt;/li&gt;
&lt;li&gt;Bad initialization during buffer realloc (bug77)&lt;/li&gt;
&lt;li&gt;Buffer overrun in stats_prefix_find (bug79)&lt;/li&gt;
&lt;li&gt;Memory corruption from negative and invalid item lengths (bug70)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Non-critical Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;non-critical-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#non-critical-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Update flush stats for binary flushes (bug71)&lt;/li&gt;
&lt;li&gt;Build fixes for OpenBSD&lt;/li&gt;
&lt;li&gt;Build fixes for Solaris/gcc&lt;/li&gt;
&lt;li&gt;Cleanup warnings brought to us by OpenBSD (sprintf, etc&amp;hellip;)&lt;/li&gt;
&lt;li&gt;Lots of fixes with the test tools&lt;/li&gt;
&lt;li&gt;Various documentation cleanups&lt;/li&gt;
&lt;li&gt;RPM spec autoupdate&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;stats slabs returns the number of requested bytes as mem_requested&lt;/li&gt;
&lt;li&gt;memcached can bind to ephemeral ports (used for testing)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.0.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.0..1.4.1&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    18  Dustin Sallings
     8  Trond Norbye
     2  dormando
     1  Mat Hostetter
     1  Adam Thomason
     1  Monty Taylor
     1  Steve Yen
     1  Matt Ingenthron
     1  Cosimo Streppone
     1  James Cohen&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1410/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1410/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.10 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1410-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1410-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2011-11-9&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.10.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.10.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This release is focused on thread scalability and performance
improvements. This release should be able to feed data back faster than any
network card can support as of this writing.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Disable issue 140&amp;rsquo;s test.&lt;/li&gt;
&lt;li&gt;Push cache_lock deeper into item_alloc&lt;/li&gt;
&lt;li&gt;Use item partitioned lock for as much as possible&lt;/li&gt;
&lt;li&gt;Remove the depth search from item_alloc&lt;/li&gt;
&lt;li&gt;Move hash calls outside of cache_lock&lt;/li&gt;
&lt;li&gt;Use spinlocks for main cache lock&lt;/li&gt;
&lt;li&gt;Remove uncommon branch from asciiprot hot path&lt;/li&gt;
&lt;li&gt;Allow all tests to run as root&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Performance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;For more details, read the commit messages from git. Each change was carefully
researched to not increase memory requirements and to be safe from deadlocks.
Each change was individually tested via mc-crusher
(&lt;a href=&#34;http://github.com/dormando/mc-crusher&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/dormando/mc-crusher&lt;/a&gt;) to ensure benefits.&lt;/p&gt;
&lt;p&gt;Tested improvements in speed between 3 and 6 worker threads (-t 3
to -t 6). More than -t 6 reduced speed.&lt;/p&gt;
&lt;p&gt;In my tests, set was raised from 300k/s to
around 930k/s. Key fetches/sec (multigets) from 1.6 million/s to around
3.7 million/s for a quadcore box. A machine with more cores was able to
pull 6 million keys per second. Incr/Decr performance increased similar
to set performance. Non-bulk tests were limited by the packet rate of
localhost or the network card.&lt;/p&gt;
&lt;p&gt;Multiple NUMA nodes reduces performance (but not enough to really
matter). If you want the absolute highest speed, as of this release you can
run one instance per numa node (where n is your core count):&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;
Older versions of memcached are plenty fast for just about all users. This
changeset is to allow more flexibility in future feature additions, as well as
improve memcached&amp;#39;s overall latency on busy systems.

Keep an eye on your hitrate and performance numbers. Please let us know
immediately if you experience any regression from these changes. We have tried
to be as thorough as possible in testing, but you never know.

### Contributors

The following people contributed to this release since 1.4.9.

Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.

Note that this is just a summary of how many changes each person made
which doesn&amp;#39;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of `git log 1.4.9..1.4.10` or use a web view.

  * Repo list:  https://github.com/memcached/memcached/wiki/DevelopmentRepos
  * Web View: http://github.com/memcached/memcached/commits/1.4.10&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;10	dormando
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1411/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1411/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.11 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1411-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1411-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2012-1-16&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.11.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.11.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Memcached 1.4.11. Fixes race conditions and crashes introduced in 1.4.10. Adds
the ability to rebalance and reassign slab memory.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;bug237: Don&amp;rsquo;t compute incorrect argc for timedrun&lt;/li&gt;
&lt;li&gt;fix &amp;lsquo;age&amp;rsquo; stat for stats items&lt;/li&gt;
&lt;li&gt;binary deletes were not ticking stats counters&lt;/li&gt;
&lt;li&gt;Fix a race condition from 1.4.10 on item_remove&lt;/li&gt;
&lt;li&gt;close some idiotic race conditions&lt;/li&gt;
&lt;li&gt;initial slab automover&lt;/li&gt;
&lt;li&gt;slab reassignment&lt;/li&gt;
&lt;li&gt;clean do_item_get logic a bit. fix race.&lt;/li&gt;
&lt;li&gt;clean up the do_item_alloc logic&lt;/li&gt;
&lt;li&gt;shorten lock for item allocation more&lt;/li&gt;
&lt;li&gt;Fix to build with cyrus sasl 2.1.25&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Slab page reassignment and bug fixes over 1.4.10.&lt;/p&gt;
&lt;h4&gt;Bug Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bug-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bug-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;There were some race conditions and logic errors introduced in 1.4.10, they
should be rare, but users are strongly encouraged to upgrade.&lt;/p&gt;
&lt;h4&gt;Slab Reassign&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;slab-reassign&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#slab-reassign&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Long running instances of memcached may run into an issue where all available
memory has been assigned to a specific slab class (say items of roughly size
100 bytes). Later the application starts storing more of its data into a
different slab class (items around 200 bytes). Memcached could not use the 100
byte chunks to satisfy the 200 byte requests, and thus you would be able to
store very few 200 byte items.&lt;/p&gt;
&lt;p&gt;1.4.11 introduces the ability to reassign slab pages. This is a &lt;em&gt;beta&lt;/em&gt; feature
and the commands may change for the next few releases, so &lt;em&gt;please&lt;/em&gt; keep this
in mind. When the commands are finalized they will be noted in the release
notes.&lt;/p&gt;
&lt;p&gt;Slab reassignment can only be enabled at start time:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;
Once all memory has been assigned and used by items, you may use a command to
reassign memory.

```$ echo &amp;#34;slabs reassign 1 4&amp;#34; | nc localhost 11211}}}

That will return an error code indicating success, or a need to retry later.
Success does not mean that the slab was moved, but that a background thread
will attempt to move the memory as quickly as it can.

#### Slab Automove

While slab reassign is a manual feature, there is also the start of an
automatic memory reassignment algorithm.

```$ memcached -o slab_reassign,slab_automove}}}

The above enables it on startup. slab_automove requires slab_reassign first be
enabled.

automove itself may also be enabled or disabled at runtime:

```$ echo &amp;#34;slabs automove 0&amp;#34; | nc localhost 11211}}}

The algorithm is slow and conservative. If a slab class is seen as having the
highest eviction count 3 times 10 seconds apart, it will take a page from a
slab class which has had zero evictions in the last 30 seconds and move the
memory.

There are lots of cases where this will not be sufficient, and we invite the
community to help improve upon the algorithm. Included in the source directory
is `scripts/mc_slab_mover`. See perldoc for more information:

```$ perldoc ./scripts/mc_slab_mover}}}

It implements the same algorithm as built into memcached, and you may modify
it to better suit your needs and improve on the script or port it to other
languages. Please provide patches!

#### Slab Reassign Implementation

Slab page reassignment requires some tradeoffs:

  * All items larger than 500k (even if they&amp;#39;re under 730k) take 1MB of space

  * When memory is reassigned, all items that were in the 1MB page are evicted

  * When slab reassign is enabled, an extra background thread is used

The first item will be improved in later releases, and is avoided if you start
memcached without the -o slab_reassign option.

#### New Stats&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;STAT slab_reassign_running 0
STAT slabs_moved 0&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;
slab_reassign_running indicates if the slab thread is attempting to move a
page. It may need to wait for some memory to free up, so it could take several
seconds.

slabs_moved is simply a count of how many pages have been successfully moved.

### Contributors

The following people contributed to this release since 1.4.10.

Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.

Note that this is just a summary of how many changes each person made
which doesn&amp;#39;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of `git log 1.4.10..1.4.11` or use a web view.

  * Repo list:  https://github.com/memcached/memcached/wiki/DevelopmentRepos
  * Web View: http://github.com/memcached/memcached/commits/1.4.11&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;15	dormando
 1	Dustin Sallings
 1	Steve Wills
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1412/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1412/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.12 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1412-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1412-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2012-2-1&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.12.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.12.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Fix a small number of bugs, mostly in building on different platforms.&lt;/p&gt;
&lt;p&gt;For the real meat, see [ReleaseNotes1411 1.4.11 Release Notes]&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix glitch with flush_all (exptime)&lt;/li&gt;
&lt;li&gt;Skip SASL tests unless RUN_SASL_TESTS is defined.&lt;/li&gt;
&lt;li&gt;Look around for saslpasswd2 (typically not in the user&amp;rsquo;s path).&lt;/li&gt;
&lt;li&gt;build fix:  Define sasl_callback_ft on older versions of sasl.&lt;/li&gt;
&lt;li&gt;fix segfault when sending a zero byte command&lt;/li&gt;
&lt;li&gt;fix warning in UDP test&lt;/li&gt;
&lt;li&gt;properly detect GCC atomics&lt;/li&gt;
&lt;li&gt;tests: loop on short binary packet reads&lt;/li&gt;
&lt;li&gt;fix slabs_reassign tests on 32bit hosts&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Fewer bugs!&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.11.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.11..1.4.12&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     5	Dustin Sallings
     5	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1413/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1413/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.13 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1413-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1413-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2012-2-2&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.13.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.13.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Really tiny release with some important build fixes which were accidentally
omitted from 1.4.12.&lt;/p&gt;
&lt;p&gt;For the interesting meat see [ReleaseNotes1412] and [ReleaseNotes1411]
especially, for slab memory reassignment!&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Fix inline issue with older compilers (gcc 4.2.2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Better detection of sasl_callback_ft&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Sigh.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.12.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.12..1.4.13&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.13&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     1	Dustin Sallings
     1	Steve Wills&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1414/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1414/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.14 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1414-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1414-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2012-7-30&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.14.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.14.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix compile issue with new GCC&amp;rsquo;s&lt;/li&gt;
&lt;li&gt;Added support for automake-1.12 in autogen.sh&lt;/li&gt;
&lt;li&gt;Use Markdown for README.&lt;/li&gt;
&lt;li&gt;Fixed issue with invalid binary protocol touch command expiration time (&lt;a href=&#34;https://github.com/memcached/memcached/issues/detail?id=275&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/issues/detail?id=275&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Define touch command probe for DTrace support&lt;/li&gt;
&lt;li&gt;Error and exit if we don&amp;rsquo;t have hugetlb support (changes -L behavior)&lt;/li&gt;
&lt;li&gt;update reassign/automove documentation&lt;/li&gt;
&lt;li&gt;Remove USE_SYSTEM_MALLOC define&lt;/li&gt;
&lt;li&gt;slab rebalancing from random class&lt;/li&gt;
&lt;li&gt;split slab rebalance and automove threads&lt;/li&gt;
&lt;li&gt;pre-split slab pages into slab freelists&lt;/li&gt;
&lt;li&gt;Avoid race condition in test during pid creation by blind retrying&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This release mainly features a number of small bugfixes, but also a change to
slab rebalance behavior.&lt;/p&gt;
&lt;p&gt;Previously, if you moved a slab page from one slab to another, you had to wait
until that new page was fully used before moving another one. That wait has
been removed, and you can move pages as fast as the system can &amp;hellip; move them.&lt;/p&gt;
&lt;p&gt;A few new features as well:&lt;/p&gt;
&lt;h4&gt;slabs reassign&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;slabs-reassign&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#slabs-reassign&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;slabs reassign -1 15&lt;/code&gt; will pick a page from any slab class and move it to
class 15.&lt;/p&gt;
&lt;h4&gt;slabs automove&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;slabs-automove&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#slabs-automove&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;slabs automove 2&lt;/code&gt; now enables an ultra aggressive page reassignment
algorithm. On every eviction, it will try to move a slab page into that
class. You should &lt;em&gt;never&lt;/em&gt; run this in production unless you have a very, very
good idea of what&amp;rsquo;s going to happen. For most people who have spurious
evictions everywhere, you&amp;rsquo;ll end up mass evicting random data and hurting your
hit rate. It can be useful to momentarily enable for emergency situations, or
if you have a data access pattern where evictions should never happen.&lt;/p&gt;
&lt;p&gt;This was work we were planning on doing already, but twitter&amp;rsquo;s rewrite has
people presently interested in trying it out. You&amp;rsquo;ve been warned.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.13.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.13..1.4.14&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.14&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    18	dormando
     1	Clint Byrum
     1	Eric McConville
     1	Fordy
     1	Maksim Zhylinski
     1	Toru Maesaka
     1	yuryur&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1415/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1415/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.15 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1415-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1415-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2012-9-3&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.15.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.15.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a somewhat experimental release which pushes thread performance even
more than before. Since this &lt;em&gt;is&lt;/em&gt; a more experimental release than usual, and
contains no other major fixes or features, we urge some caution for important
deployments. We feel as though it is high quality software, but please take
caution and do slow rollouts or testing. Thanks!&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Add some mild thread documentation&lt;/li&gt;
&lt;li&gt;README.md was missing from dist tarball&lt;/li&gt;
&lt;li&gt;Issue 286: &amp;ndash;disable-coverage drops &amp;ldquo;-pthread&amp;rdquo; option&lt;/li&gt;
&lt;li&gt;Reduce odds of getting OOM errors in some odd cases&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Thread scalability is much improved for reads, and somewhat improved for
writes. In a pure read-only situation on a dual socket six core NUMA machine
I&amp;rsquo;ve tested key fetch rates around 13.6 million keys per second.&lt;/p&gt;
&lt;p&gt;More tuning is necessary and you&amp;rsquo;d get significant lag at that rate, but that
shows the theoretical limit of the locks.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.14.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.14..1.4.15&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.15&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.15&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     6	dormando
     1	Trond Norbye&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1416/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1416/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.16 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1416-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1416-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2013-12-9&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.16.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.16.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A quick bugfix release to get the tree moving again after a long absence. I
don&amp;rsquo;t want to make too many changes at once, so here are a number of platform
and crash fixes, as well as some introspection.&lt;/p&gt;
&lt;p&gt;If you run 1.4.16 and experience any sort of memory leak or
segfault/crash/hang, &lt;em&gt;please&lt;/em&gt; contact us. Please do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build memcached 1.4.16 from the tarball.&lt;/li&gt;
&lt;li&gt;Run the &amp;ldquo;memcached-debug&amp;rdquo; binary that is generated at make time under a gdb
instance&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t forget to ignore SIGPIPE in gdb: &amp;ldquo;handle SIGPIPE nostop&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Grab a backtrace &amp;ldquo;thread apply all bt&amp;rdquo; if it crashes and post it to the
mailing list or otherwise hunt me down.&lt;/li&gt;
&lt;li&gt;Grab &amp;ldquo;stats&amp;rdquo;, &amp;ldquo;stats settings&amp;rdquo;, &amp;ldquo;stats slabs&amp;rdquo;, &amp;ldquo;stats items&amp;rdquo; from an
instance that has been running for a while but hasn&amp;rsquo;t crashed yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These crashes have been around too long and I would love to get rid of them
soon.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Builds on OS X Mavericks (with clang)&lt;/li&gt;
&lt;li&gt;Add statistics for allocation failures&lt;/li&gt;
&lt;li&gt;Issue 294: Check for allocation failure&lt;/li&gt;
&lt;li&gt;Make tail leak expiry time configurable (-o tail_repair_time=60)&lt;/li&gt;
&lt;li&gt;Fix segfault on specially crafted packet.&lt;/li&gt;
&lt;li&gt;Close connection on update_event error while parsing new commands&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t truncate maxbytes stat from &amp;lsquo;stats settings&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Add the &amp;ldquo;shutdown&amp;rdquo; command to the server. This allows for better automation&lt;/li&gt;
&lt;li&gt;fix enable-sasl-pwdb&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Adjusting tail repair time:
-o tail_repair_time=60 (in seconds)&lt;/p&gt;
&lt;p&gt;&amp;ldquo;tail repairs&amp;rdquo; are a failsafe within memcached where if a cache item is leaked
via an unfixed or obscure bug, the item will be recycled anyway if it ends up
at the bottom of the LRU and hasn&amp;rsquo;t been touched in a long period of time.
Most releases do not have these bugs, but some have so we&amp;rsquo;ve left the
mechanism in place. The default time before reaping is 3 hours.
For a busy site that sucks. we&amp;rsquo;ve lowered the default to one hour, which is much
longer than any object should ever take to download.&lt;/p&gt;
&lt;p&gt;If you need dead items to be pulled more quickly, use this override. Make sure
you don&amp;rsquo;t set it too low if you have clients which download items very slowly
(unlikely, but eh).&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.15.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.15..1.4.16&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.16&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     5	Trond Norbye
     4	dormando
     2	Brian Aker
     2	Eric McConville
     1	Gabriel A. Samfira
     1	Huzaifa Sidhpurwala
     1	Kenneth Steele
     1	Keyur
     1	Wing Lian
     1	liu bo&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1417/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1417/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.17 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1417-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1417-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2013-12-20&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.17.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.17.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Another bugfix release along with some minor new features. Most notable is a
potential fix for a crash bug that has plagued the last few versions. If you
see crashes with memcached, &lt;em&gt;please&lt;/em&gt; try this version and let us know if you
still see crashes.&lt;/p&gt;
&lt;p&gt;The other notable bug is a SASL authentication bypass glitch. If a client
makes an invalid request with SASL credentials, it will initially fail.
However if you issue a second request with bad SASL credentials, it will
authenticate. This has now been fixed.&lt;/p&gt;
&lt;p&gt;If you see crashes please try the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build memcached 1.4.17 from the tarball.&lt;/li&gt;
&lt;li&gt;Run the &amp;ldquo;memcached-debug&amp;rdquo; binary that is generated at make time under a gdb
instance&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t forget to ignore SIGPIPE in gdb: &amp;ldquo;handle SIGPIPE nostop&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Grab a backtrace &amp;ldquo;thread apply all bt&amp;rdquo; if it crashes and post it to the
mailing list or otherwise hunt me down.&lt;/li&gt;
&lt;li&gt;Grab &amp;ldquo;stats&amp;rdquo;, &amp;ldquo;stats settings&amp;rdquo;, &amp;ldquo;stats slabs&amp;rdquo;, &amp;ldquo;stats items&amp;rdquo; from an
instance that has been running for a while but hasn&amp;rsquo;t crashed yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip; and send as much as you can to the mailing list. If the data is sensitive
to you, please contact dormando privately.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix potential segfault in incr/decr routine.&lt;/li&gt;
&lt;li&gt;Fix potential unbounded key prints (leading to crashes in logging code)&lt;/li&gt;
&lt;li&gt;Fix bug which allowed invalid SASL credentials to authenticate.&lt;/li&gt;
&lt;li&gt;Fix udp mode when listening on ipv6 addresses.&lt;/li&gt;
&lt;li&gt;Fix for incorrect length of initial value set via binary increment protocol.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Add linux accept4() support. Removes one syscall for each new tcp
connection.&lt;/li&gt;
&lt;li&gt;scripts/memcached-tool gets &amp;ldquo;settings&amp;rdquo; and &amp;ldquo;sizes&amp;rdquo; commands.&lt;/li&gt;
&lt;li&gt;Add parameter (-F) to disable flush_all. Useful if you never want to be
able to run a full cache flush on production instances.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.16.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.16..1.4.17&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.17&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.17&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     6	dormando
     1	Adam Szkoda
     1	Alex Leone
     1	Andrey Niakhaichyk
     1	Daniel Pañeda
     1	Jeremy Sowden
     1	Simon Liu
     1	Tomas Kalibera
     1	theblop
     1	伊藤洋也&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1418/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1418/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.18 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1418-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1418-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2014-4-17&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.18.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.18.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix LRU contention for first minute of uptime
&lt;ul&gt;
&lt;li&gt;This made some synthetic benchmarks look awful.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make hash table algorithm selectable&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t lose item_size_max units in command line&lt;/li&gt;
&lt;li&gt;Add a &amp;ldquo;stats conns&amp;rdquo; command to show the states of open connections.&lt;/li&gt;
&lt;li&gt;Allow caller-specific error text in binary protocol&lt;/li&gt;
&lt;li&gt;Stop returning ASCII error messages to binary clients&lt;/li&gt;
&lt;li&gt;Fix reference leak in binary protocol &amp;ldquo;get&amp;rdquo; and &amp;ldquo;touch&amp;rdquo; handlers&lt;/li&gt;
&lt;li&gt;Fix reference leak in process_get_command()&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Stats conns&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;stats-conns&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#stats-conns&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;New &amp;ldquo;stats conns&amp;rdquo; command, which will show you what currently open connections are up to, how idle they&amp;rsquo;ve been, etc.&lt;/p&gt;
&lt;h4&gt;Starttime Hash Algorithm Selection&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;starttime-hash-algorithm-selection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#starttime-hash-algorithm-selection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The jenkins hash was getting a little long in the tooth, and we might want to
add specific hash algorithms for different platforms in the future. This makes
it selectable in some sense. We&amp;rsquo;ve initially added murmur3 hash to the lineup
and that seems to run a tiny bit faster in some tests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-o hash_algorithm=murmur3&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;LRU Crawler&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;lru-crawler&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#lru-crawler&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A new background thread emerges! Currently experimental, so the syntax might
change. If you run into bugs please let us know (though it&amp;rsquo;s been testing fine
in torture tests so far).&lt;/p&gt;
&lt;p&gt;If you wish to clean your slab classes of items which have been expired,
either one-time or periodically, this will do it with low impact as a
background operation.&lt;/p&gt;
&lt;p&gt;Currently it requires kicking off a crawl via manual command:&lt;/p&gt;
&lt;p&gt;First, enable the thread:
&lt;code&gt;lru_crawler enable&lt;/code&gt;
or use &lt;code&gt;-o lru_crawler&lt;/code&gt; as a starttime option.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lru_crawler crawl 1,3,5&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;hellip; would crawl slab classes 1,3,5 looking for expired items to add to the
freelist.&lt;/p&gt;
&lt;p&gt;This is generally not useful or required, unless you have memory with very
mixed TTLs, you do not fetch items frequently enough or otherwise cause them
to expire, and you don&amp;rsquo;t want items with longer TTLs block reclaiming expired
items, or to be evicted early.&lt;/p&gt;
&lt;p&gt;Future uses of the thread should allow examining and purging items via a
plugin interface: IE crawl all items matching some string and remove them, or
count them. It is simple to modify to experiment with as of now.&lt;/p&gt;
&lt;p&gt;See doc/protocol.txt for full explanation of related commands and counters.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.17.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.17..1.4.18&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.18&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    21	dormando
     8	Steven Grimm
     1	Andrew Glinskiy&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1419/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1419/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.19 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1419-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1419-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2014-5-1&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.19.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.19.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix endianness detection during configure.
&lt;ul&gt;
&lt;li&gt;Fixes a performance regression with binary protocol (up to 20%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fix rare segfault in incr/decr.&lt;/li&gt;
&lt;li&gt;disable tail_repair_time by default.
&lt;ul&gt;
&lt;li&gt;Likely not needed anymore, and can rarely cause bugs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;use the right hashpower for the item_locks table. Small perf improvement.&lt;/li&gt;
&lt;li&gt;Fix crash for LRU crawler while using lock elision (haswell+ processors)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;See the release notes for 1.4.18 for recent interesting features.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.18.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.18..1.4.19&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.19&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     9	dormando
     1	Dagobert Michelsen
     1	Eric McConville&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes142/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes142/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.2 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-142-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-142-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2009-10-11 Sun&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.2.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.2.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a maintenance release consisting primarily of bug fixes.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Critical Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;critical-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#critical-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Reject keys larger than 250 bytes in the binary protocol (bug94)&lt;/li&gt;
&lt;li&gt;Bounds checking on stats cachedump (bug92)&lt;/li&gt;
&lt;li&gt;Binary protocol set+cas wasn&amp;rsquo;t returning a new cas ID (bug87)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Non-critical Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;non-critical-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#non-critical-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Binary quitq didn&amp;rsquo;t actually close the connection (bug84)&lt;/li&gt;
&lt;li&gt;Build fix on CentOS 5 (bug88)&lt;/li&gt;
&lt;li&gt;Slab boundary checking cleanup (bad logic in unreachable code)&lt;/li&gt;
&lt;li&gt;Removed some internal redundancies.&lt;/li&gt;
&lt;li&gt;Use the OS&amp;rsquo;s provided htonll/ntohll if present (bug83)&lt;/li&gt;
&lt;li&gt;Test fixes/cleanup/additions.&lt;/li&gt;
&lt;li&gt;Get hit memory optimizations (bug89)&lt;/li&gt;
&lt;li&gt;Disallow -t options that cause the server to not work (bug91)&lt;/li&gt;
&lt;li&gt;memcached -vv now shows the final slab&lt;/li&gt;
&lt;li&gt;Killed off incomplete slab rebalance feature.&lt;/li&gt;
&lt;li&gt;Better warnings.&lt;/li&gt;
&lt;li&gt;More consistent verbosity in binary and ascii (bug93)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Support for libhugetlbfs (in Linux)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;support-for-libhugetlbfs-in-linux&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#support-for-libhugetlbfs-in-linux&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;From &lt;a href=&#34;http://libhugetlbfs.ozlabs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://libhugetlbfs.ozlabs.org/&lt;/a&gt; -&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; libhugetlbfs is a library which provides easy access to huge
 pages of memory. It is a wrapper for the hugetlbfs file
 system.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are running memcached with a very large heap in Linux, this
change will make it available to you.  The hugetlbfs HOWTO provides
detailed information on how to configure your Linux system and provide
advice to applications (such as memcached) to make use of it.&lt;/p&gt;
&lt;h4&gt;Support for evictions, evict_time and OOM counts in memcached-tool&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;support-for-evictions-evict_time-and-oom-counts-in-memcached-tool&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#support-for-evictions-evict_time-and-oom-counts-in-memcached-tool&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;memcached-tool is a commandline tool to display information about your
server.  It displays more now.&lt;/p&gt;
&lt;h4&gt;Configurable maximum item size&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;configurable-maximum-item-size&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#configurable-maximum-item-size&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Many people have asked for memcached to be able to store items larger
than 1MB, while it&amp;rsquo;s generally recommended that one &lt;em&gt;not&lt;/em&gt; do this, it
is now supported on the commandline.&lt;/p&gt;
&lt;p&gt;A few enlightened folk have also asked for memcached to reduce the
maximum item size.  That is also an option.&lt;/p&gt;
&lt;p&gt;The new -I parameter allows you to specify the maximum item size at
runtime.  It supports a unit postfix to allow for natural expression
of item size.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;memcached -I 128k # Refuse items larger than 128k.
memcached -I 10m  # Allow objects up to 10MB&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;h4&gt;New stat: &amp;rsquo;evicted_nonzero&#39;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-stat-evicted_nonzero&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-stat-evicted_nonzero&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The evicted_nonzero stat is a counter of all of the evictions for
items that had an expiration time greater than zero.&lt;/p&gt;
&lt;p&gt;This can be used to help distinguish &amp;ldquo;healthy&amp;rdquo; evictions from
&amp;ldquo;unhealthy&amp;rdquo; ones.  If all of your evictions are for objects with no
expiration, then they&amp;rsquo;re naturally falling off the LRU as opposed to
being evicted before their maximum expiry that was set at item store
time.&lt;/p&gt;
&lt;h4&gt;Protocol definitions for range protocol&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;protocol-definitions-for-range-protocol&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#protocol-definitions-for-range-protocol&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;memcached ships with a binary protocol header that can be used when
implementing your own protocol parsers and generators.  The structure
definitions and opcodes for the range specification are included in
this header.&lt;/p&gt;
&lt;p&gt;Note that the server &lt;em&gt;does not&lt;/em&gt; support these operations.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.1.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.1..1.4.2&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    12  Dustin Sallings
    10  Trond Norbye
     9  dormando
     1  Vladimir
     1  Ryan Tomayko
     1  Mat Hostetter
     1  Jonathan Steinert
     1  Dmitry Isaykin&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1420/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1420/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.20 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1420-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1420-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2014-5-11&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.20.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.20.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Just one tiny change to fix a regression causing threads to lock up and spin
max CPU.&lt;/p&gt;
&lt;p&gt;1.4.18 and 1.4.19 were affected. 1.4.17 and earlier were not affected. If you
are on .18 or .19 an upgrade to 1.4.20 is strongly advised.&lt;/p&gt;
&lt;p&gt;Thanks to commando.io for reporting the bug initially and putting up with me
being blind for a few weeks.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix a race condition causing new connections to appear closed, causing an inifinte loop.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;None, see 1.4.18 for new interesting features, or 1.4.19 for other useful
bugfixes.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.19.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.19..1.4.20&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.20&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     1	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1421/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1421/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.21 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1421-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1421-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2014-10-12&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.21.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.21.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;makefile cleanups&lt;/li&gt;
&lt;li&gt;Avoid OOM errors when locked items stuck in tail&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If clients occasionally fetch many items, more than can fit the TCP buffers, then hang for a very long period of time, that slab class could OOM. In older versions this could cause a crash. Since 1.4.20 this will cause OOM errors.&lt;/p&gt;
&lt;p&gt;Now, if a locked item lands in the LRU tail, it will be bumped back to the head and an lrutail_reflocked counter incremented. If you&amp;rsquo;re concerned about having stuck clients, watch that counter.&lt;/p&gt;
&lt;p&gt;Big thanks to Jay Grizzard et all at Box for helping track this down!&lt;/p&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;None.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.20.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.20..1.4.21&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.21&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     4	Steve Wills
     3	dormando
     1	Jay Grizzard&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1422/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1422/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.22 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1422-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1422-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2014-12-31&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.22.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.22.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Bugfix maintenance release. Fixes to hash table expansion now completely hang all threads very briefly while the hash table pointers are swapped. Once swapped, it unlocks and uses locks as normal.&lt;/p&gt;
&lt;p&gt;In previous versions, the hash table was switched to a global lock instead of a map of bucket-locks during expansion. This should be faster overall with a small latency penalty. It&amp;rsquo;s possible to presize the hash table with &lt;code&gt;-o hashpower&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;gatkq: return key in response&lt;/li&gt;
&lt;li&gt;Handle SIGTERM the same as SIGINT&lt;/li&gt;
&lt;li&gt;Fix off-by-one causing segfault in lru_crawler&lt;/li&gt;
&lt;li&gt;Fix potential corruption for incr/decr of 0b items&lt;/li&gt;
&lt;li&gt;Fix issue #369 - uninitialized stats_lock&lt;/li&gt;
&lt;li&gt;issue#370: slab re-balance is not thread-safe in function do_item_get&lt;/li&gt;
&lt;li&gt;Fix potential corruption in hash table expansion&lt;/li&gt;
&lt;li&gt;use item lock instead of global lock when hash expanding&lt;/li&gt;
&lt;li&gt;fix hang when lru crawler started from commandline&lt;/li&gt;
&lt;li&gt;rename thread_init to avoid runtime failure on AIX&lt;/li&gt;
&lt;li&gt;Support -V (version option)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.21.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.21..1.4.22&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.22&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     6	dormando
     2	Jason CHAN
     1	Dan McGee
     1	Menghan
     1	Mike Dillon
     1	Oskari Saarenmaa
     1	clark.kang
     1	mckelvin&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1423/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1423/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.23 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1423-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1423-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2015-4-19&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.23.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.23.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Major new release with a complete overhaul of the LRU system. Potentially huge benefits in memory efficiency are possible if the new features are enabled. By default the code should behave similar to how it did in all previous versions, though locking is improved and the new code is still used in some ways.&lt;/p&gt;
&lt;p&gt;Please read the feature notes carefully and try it out!&lt;/p&gt;
&lt;p&gt;Real world examples have shown huge memory efficiency increases when using items of mixed TTL&amp;rsquo;s (some short, some long). When all items have unlimited TTLs, hit ratios have still improved by several percent.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;spinlocks removed since they never seem to improve performance.&lt;/li&gt;
&lt;li&gt;flush_all was not thread safe.&lt;/li&gt;
&lt;li&gt;better handle items refcounted in tail by unlinking them from the LRU&amp;rsquo;s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This release is a reworking of memcached&amp;rsquo;s core LRU algorithm.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;global cache_lock is gone, LRU&amp;rsquo;s are now independently locked.&lt;/li&gt;
&lt;li&gt;LRU&amp;rsquo;s are now split between HOT, WARM, and COLD LRU&amp;rsquo;s. New items enter the HOT LRU.&lt;/li&gt;
&lt;li&gt;LRU updates only happen as items reach the bottom of an LRU. If active in HOT, stay in HOT, if active in WARM, stay in WARM. If active in COLD, move to WARM.&lt;/li&gt;
&lt;li&gt;HOT/WARM each capped at 32% of memory available for that slab class. COLD is uncapped.&lt;/li&gt;
&lt;li&gt;Items flow from HOT/WARM into COLD.&lt;/li&gt;
&lt;li&gt;A background thread exists which shuffles items between/within the LRU&amp;rsquo;s as capacities are reached.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The primary goal is to better protect active items from &amp;ldquo;scanning&amp;rdquo;. items which are never hit again will flow from HOT, through COLD, and out the bottom. Items occasionally active (reaching COLD, but being hit before eviction), move to WARM. There they can stay relatively protected.&lt;/p&gt;
&lt;p&gt;A secondary goal is to improve latency. The LRU locks are no longer used on item reads, only during sets and from the background thread. Also the background thread is likely to find expired items and release them back to the slab class asynchronously, which speeds up new allocations. Further work on the thread should improve this.&lt;/p&gt;
&lt;p&gt;There are a number of new statistics to monitor this. Mainly you&amp;rsquo;ll just want to judge your hit ratio before/after, as well as any potential latency issues.&lt;/p&gt;
&lt;p&gt;To enable: start with &lt;code&gt;-o lru_maintainer,lru_crawler&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To adjust percentage of memory reserved for HOT or WARM LRU&amp;rsquo;s (default to 32% each):
&lt;code&gt;-o lru_maintainer,lru_crawler,hot_lru_pct=32,warm_lru_pct=32&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A recommended start line:
&lt;code&gt;-o lru_maintainer,lru_crawler,hash_algorithm=murmur3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An extra option: -o expirezero_does_not_evict (when used with lru_maintainer) will make items with an expiration time of 0 unevictable. Take caution as this will crowd out memory available for other evictable items.&lt;/p&gt;
&lt;p&gt;Some caveats exist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some possible tunables are currently hardcoded.&lt;/li&gt;
&lt;li&gt;Max number of slab classes is now 62, instead of 200. The default slab factor gives 42 classes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is loosely inspired by the 2Q algorithm. More specifically the OpenBSD variant of it: &lt;a href=&#34;http://www.tedunangst.com/flak/post/2Q-buffer-cache-algorithm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.tedunangst.com/flak/post/2Q-buffer-cache-algorithm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s then extended to cope with the fact that memcached items do not behave the same way as a buffer pool. TTL&amp;rsquo;s mean extra scanning/shuffling is done to improve memory efficiency for valid items.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.22.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.22..1.4.23&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.23&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.23&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    31	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1424/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1424/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.24 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1424-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1424-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2015-4-25&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.24.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.24.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Bugfix release to replace 1.4.23. If you tried 1.4.23, please try this version instead. I apologize for any frustrations from the .23 release. If you see further issues, please report them quickly and we will look into them.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;relax timing glitch in the lru maintainer test&lt;/li&gt;
&lt;li&gt;fix major off by one issue&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Please see: &lt;a href=&#34;https://code.google.com/p/memcached/wiki/ReleaseNotes1423&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.google.com/p/memcached/wiki/ReleaseNotes1423&lt;/a&gt; for the changes new to 1.4.23, as they were significant.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.23.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.23..1.4.24&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.24&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.24&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     3	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1425/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1425/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.25 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1425-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1425-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2015-11-19&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.25.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.25.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Many small fixes from internal and public pull requests/bug reports have gone
into this release. Thanks to all of those who contribute.&lt;/p&gt;
&lt;p&gt;A large change to slab class rebalancing has gone into this release. Please
read carefully below and try the new options, as they may improve your memory
efficiency and hit ratio. Especially for long running instances.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Automake improvements&lt;/li&gt;
&lt;li&gt;Misc documentation fixes&lt;/li&gt;
&lt;li&gt;Misc updates to startup scripts&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lru_crawler enable&lt;/code&gt; blocks until ready (test failure)&lt;/li&gt;
&lt;li&gt;Record and report on time spent in &lt;code&gt;listen_disabled&lt;/code&gt;
(time_in_listen_disabled_us)&lt;/li&gt;
&lt;li&gt;Update manpage for -I command. Make it more clear&lt;/li&gt;
&lt;li&gt;Fix display of &lt;code&gt;settings.hot_lru_pct&lt;/code&gt; in &lt;code&gt;stats settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;No longer edits the output of &lt;code&gt;ps&lt;/code&gt; while processing arguments&lt;/li&gt;
&lt;li&gt;No longer crashes when failing to give arguments to some start args&lt;/li&gt;
&lt;li&gt;Fix memcached unable to bind to an ipv6 address&lt;/li&gt;
&lt;li&gt;No longer attempts bind to same interface more than once&lt;/li&gt;
&lt;li&gt;fixed libevent version check: add the missing 1.0.x version check&lt;/li&gt;
&lt;li&gt;fix off-by-one in LRU crawler, causing rare segfault&lt;/li&gt;
&lt;li&gt;remove another invalid assert(), fixes clang and pedantic compilation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Slab automover has gotten a very large update. The wider discussion can be
found in the &lt;a href=&#34;https://github.com/memcached/memcached/pull/113&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As data is stored into memcached, it pre-allocates pages of memory into slab
classes of a particular size (ie: 90 bytes, 120 bytes). If you fill your cache
with 90 byte objects, and then start writing 120 byte objects, there will be
much less space available for 120 byte objects.&lt;/p&gt;
&lt;p&gt;With the slab automover improvements, freed memory can be reclaimed back into
a global pool and reassigned to new slab classes. You can also still manually
move slab pages between classes with your own external process if the automover
does not fit your needs (see doc/protocol.txt for full details).&lt;/p&gt;
&lt;p&gt;The automover now attempts to rescue items which are still valid when moving a
page from one class to another, or from one class into the global page pool.
This makes it much less destructive.&lt;/p&gt;
&lt;p&gt;To get all of the benefits of the last few releases, we recommend adding the
following startup options:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-o slab_reassign,slab_automove,lru_crawler,lru_maintainer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A modern start line includes a few other items:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-o slab_reassign,slab_automove,lru_crawler,lru_maintainer,maxconns_fast,hash_algorithm=murmur3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Many of these options are likely to become defaults in the future.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.24.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.24..1.4.25&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.25&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    20	dormando
     3	Cameron Norman
     3	Miroslav Lichvar
     2	Antony Dovgal
     1	Alwayswithme
     1	Ian Miell
     1	Johan Bergström
     1	Mattias Geniar
     1	Roman Mueller
     1	Saman Barghi
     1	Sharif Nassar
     1	Yongyue Sun
     1	githublvv
     1	kenvifire
     1	mdl
     1	wangkang-xy
     1	zhoutai&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1426/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1426/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.26 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1426-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1426-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-6-17&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.memcached.org/files/memcached-1.4.26.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.memcached.org/files/memcached-1.4.26.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The usual routine of small fixes comes with the first pass of a big new
feature: on-demand live logging! If you&amp;rsquo;ve ever reached for &lt;code&gt;stats cachedump&lt;/code&gt;,
you&amp;rsquo;ll be much better served by this feature. See below for details.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;bump some global stats to 64bit uints (total_connections)&lt;/li&gt;
&lt;li&gt;sanity check for maximum connections setting&lt;/li&gt;
&lt;li&gt;get_expired stats&lt;/li&gt;
&lt;li&gt;make cachedump print 0exp for noexpire items&lt;/li&gt;
&lt;li&gt;compilation fixes for GNU/Hurd&lt;/li&gt;
&lt;li&gt;fix building of binary documentation files.&lt;/li&gt;
&lt;li&gt;document negative expiration values&lt;/li&gt;
&lt;li&gt;fix build with musl libc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;There is now a &lt;code&gt;-o modern&lt;/code&gt; option which combines all of the new
recommended features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the previous release, it was recommended that memcached be started with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-o slab_reassign,slab_automove,lru_crawler,lru_maintainer,maxconns_fast,hash_algorithm=murmur3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;hellip; to get the benefit of new features. These will become the default soon. In
the meantime a shorthand of &lt;code&gt;-o modern&lt;/code&gt; can be used which will act like the
above line, and include new recommended defaults ahead of them becoming actual
defaults. Memcached has always been treated extremely conservatively so this
tries to be as safe as possible.&lt;/p&gt;
&lt;h4&gt;Logging!&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;logging&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#logging&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;$ telnet localhost 11211
Trying 127.0.0.1...
Connected to localhost.
Escape character is &amp;#39;^]&amp;#39;.
watch fetchers
OK&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;Connect again:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;$ telnet localhost 11211
Trying 127.0.0.1...
Connected to localhost.
Escape character is &amp;#39;^]&amp;#39;.
get foo
END&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;First connection will output:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;ts=1466120156.99667 gid=1 type=item_get key=foo status=not_found&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;watch evictions&lt;/code&gt; can show details about evicted items:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;ts=1466120156.304163 gid=57180 type=eviction key=n%2Cfoo1539 fetch=no ttl=-1
la=0&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;(ttl: time remaining before expiration. la: last access time. fetch: whether
or not it was ever read)&lt;/p&gt;
&lt;p&gt;In this release &lt;code&gt;fetchers&lt;/code&gt; &lt;code&gt;mutations&lt;/code&gt; and &lt;code&gt;evictions&lt;/code&gt; are supported. You can
mix and match on a connection:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;watch fetchers mutations evictions&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Logs will continue to emit until the watcher disconnects. If the watcher gets
behind on reading data, log lines will be dropped (and a notice appended when
it resumes).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Logs are collected asynchronously. A background thread renders and writes
to clients. This should reduce the latency and max CPU overhead of using
the logs. If no watchers are active, logs aren&amp;rsquo;t generated at all.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Logs are potentially received out of order. Re-order by the &lt;code&gt;gid=&lt;/code&gt; option
if this is important.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keys are represented by &amp;ldquo;URI Encoding&amp;rdquo;. Most ASCII keys are unaffected, but
some characters will be replaced by &lt;code&gt;%NN&lt;/code&gt; equivalents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The initial fetchers/mutations code are monitoring &lt;em&gt;internal&lt;/em&gt; key fetches
and stores. This means a &amp;ldquo;set&amp;rdquo; command runs first a get and then a store,
showing two log lines. A multiget will emit one log line per key.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Further code cleanups and more logging endpoints are scheduled for future
releases. There&amp;rsquo;s also a potential for modular log formats. Let us know
what&amp;rsquo;s important for you!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href=&#34;https://github.com/memcached/memcached/pull/127&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt; for
full detail.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.25.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.25..1.4.26&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.26&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.26&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    23	dormando
     4	Guillaume Delacour
     3	sergiocarlos
     2	祁冰
     1	Caleb Shay
     1	Matt Fowles Kulukundis
     1	Natanael Copa
     1	hiracy
     1	meteorgan&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1427/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1427/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.27 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1427-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1427-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-6-24&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.27.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.27.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Fix some compile and flaky test issues with 1.4.26. Adds several new features
and fixes.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;treat and print item flags as unsigned int&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make watcher test less flaky.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;indent fixes in thread_libevent_process to make future changes easier&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fix solaris compiler warning in bipbuffer.c&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add #include &amp;lt;stdio.h&amp;gt; to fix error: implicit declaration of function ‘snprintf’ on centos&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;change LRU crawler fprintf to use %u format instead of %d&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add -o watcher_logbuf_size=N worker_logbuf_size=N&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You don&amp;rsquo;t need this last one unless you&amp;rsquo;re writing tests or need to carefully
tune the logger to avoid skipped or dropped lines.&lt;/p&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;memcached idle connection killer
(&lt;a href=&#34;https://github.com/memcached/memcached/pull/80&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/pull/80&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If specifying &lt;code&gt;-o idle_timeout=s&lt;/code&gt; where s is seconds, connected clients idle
for at least that long will be asked to close. Defaulted to off, but could be
useful if you tend to have clients that go out to lunch and never come back.&lt;/p&gt;
&lt;p&gt;Thanks to Jay Grizzard for this feature!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cache_memlimit&lt;/code&gt; command for tuning runtime maxbytes
(&lt;a href=&#34;https://github.com/memcached/memcached/pull/170&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/pull/170&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally! You can now dynamically increase the amount of memory available to
memcached without having to restart it. If &lt;code&gt;-o modern&lt;/code&gt; is in use (slab
rebalancer enabled), it can be told to free memory back to the system by
lowering the memory limit.&lt;/p&gt;
&lt;p&gt;A big caveat is that it&amp;rsquo;s up to the OS as to if the memory can be returned to
the OS, or if it stays in the application heap. Do careful testing before
relying on being able to free memory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;online hang-free &amp;ldquo;stats sizes&amp;rdquo; command.&lt;/li&gt;
&lt;li&gt;allow manually specifying slab class sizes
(&lt;a href=&#34;https://github.com/memcached/memcached/pull/169&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/pull/169&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These two features are part of the one pull request. The &lt;code&gt;stats sizes&lt;/code&gt; command
would hang one of the worker threads while iterating all of your items.&lt;/p&gt;
&lt;p&gt;Now, the process is dynamic, tallying sizes as items are added to or removed
from the cache. It must be enabled at starttime via &lt;code&gt;-o track_sizes&lt;/code&gt;, or
dynamically via &lt;code&gt;stats sizes_enable&lt;/code&gt; and &lt;code&gt;stats sizes_disable&lt;/code&gt; ascii commands.&lt;/p&gt;
&lt;p&gt;If you have item sizes that are very static, or align very poorly by using the
&lt;code&gt;-f&lt;/code&gt; feature, you can now specify the exact sizes of the slab classes via
commands like &lt;code&gt;-o slab_sizes=100-200-300-400-500&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.26.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.26..1.4.27&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.27&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.27&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     9	dormando
     2	Jay Grizzard
     1	Mathieu CARBONNEAUX
     1	Ryan McCullagh&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1428/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1428/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.28 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1428-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1428-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-7-1&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.28.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.28.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Bugfix release. Thanks to everyone who tested!&lt;/p&gt;
&lt;p&gt;While good progress has been made on a new feature, it&amp;rsquo;s getting some more
burn-in time and this fix/cleanup release is happening in the meantime.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;systemd init script hardening hardening&lt;/li&gt;
&lt;li&gt;make watcher.t be even less flaky.&lt;/li&gt;
&lt;li&gt;don&amp;rsquo;t fail on systems without 64bit atomics&lt;/li&gt;
&lt;li&gt;small code refactor of logger&lt;/li&gt;
&lt;li&gt;clean up global stats code a little.&lt;/li&gt;
&lt;li&gt;add get_flushed counter, fix expired_unfetched&lt;/li&gt;
&lt;li&gt;Fix undefined behavior in vlen check&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;None. Several new features have been added in 1.4.26 and 1.4.27, please refer
to those release notes.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.27.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.27..1.4.28&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.28&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.28&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     7	dormando
     2	Craig Andrews
     1	J. Grizzard
     1	Paul Lindner&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1429/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1429/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.29 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1429-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1429-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-7-13&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.29.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.29.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Improved support for large items over the 1 megabyte default. Also includes a
handful of features.&lt;/p&gt;
&lt;p&gt;Large items now have much better memory efficiency, and can get very large
(potentially hundreds of megabytes) safely.&lt;/p&gt;
&lt;p&gt;To make use of the new feature, simply use the &lt;code&gt;-I&lt;/code&gt; option as before, IE:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-I 2m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Many thanks to &lt;a href=&#34;https://www.packet.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.packet.net/&lt;/a&gt; for providing high speed baremetal
hardware which was used for performance and burn-in testing of this new
feature.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix items with a &amp;ldquo;0&amp;rdquo; hash result from failing to evict sometimes.&lt;/li&gt;
&lt;li&gt;allow cachedump&amp;rsquo;ing of slab 63.&lt;/li&gt;
&lt;li&gt;fix flakiness of slabs-reassign2.t test.&lt;/li&gt;
&lt;li&gt;Fix ancient binprot bug with sets resulting in OOM errors desycning the
protocol.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;After over a decade of having an item size target of a single megabyte, items
can now safely raise above that. Up to hundreds of megabytes, potentially.&lt;/p&gt;
&lt;p&gt;This feature automatically enables if you raise the item size limit above 1mb.
IE: &lt;code&gt;-I 2m&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also enable it manually with a limit of 1mb (the default of &lt;code&gt;-I 1m&lt;/code&gt;) or
less (like &lt;code&gt;-I 512k&lt;/code&gt;) by setting &lt;code&gt;-o slab_chunk_max=16384&lt;/code&gt;
(16384 is the recommended default).&lt;/p&gt;
&lt;p&gt;Full details in the pull request:
&lt;a href=&#34;https://github.com/memcached/memcached/pull/181&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/pull/181&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Memcached uses a slab allocator, which splits up memory into chunks of
specific sizes.&lt;/li&gt;
&lt;li&gt;The &amp;ldquo;item size limit&amp;rdquo; has always been the largest possible slab chunk.&lt;/li&gt;
&lt;li&gt;Increasing the size limit thus spreads out available slab classes, reducing
memory efficiency.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The maximum slab chunk size is no longer tied to the maximum item size.&lt;/li&gt;
&lt;li&gt;Items larger than the slab chunk size now comprise of multiple chunks of
the largest size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With a smaller maximum chunk size, the slab classes for small items are now
more fine grained raising memory efficiency.&lt;/li&gt;
&lt;li&gt;Items that approach 1mb can waste more memory as the classes are far apart.
Chaining items together can help a lot here.&lt;/li&gt;
&lt;li&gt;Performance should be good, as small items are still 1:1 and large items
soak more bandwidth, allowing extra room for a very small amount of CPU
overhead.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Current caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The system has always been able to store an item after evicting exactly one
item. This is no longer the case for large items. If you mix very large
items (say 5 megabyte), with many small-ish items (say 100k), with a slab
chunk max of 16k, memcached may return more OOM errors than normal while
attempting to free enough space to store a new 5 megabyte item.&lt;/li&gt;
&lt;li&gt;With a slab chunk max of 16k, an item that requires 16k + 1 byte of memory
will use 32k of memory. The larger the item the less effective overhead
this has, but at the smaller levels it can lead to problems. Simply leave
settings at their defaults or raise the &lt;code&gt;slab_chunk_max&lt;/code&gt; if you run into this.&lt;/li&gt;
&lt;li&gt;There be dragons if you attempt to store multiple gigabyte items. The item
size attributes are 32bit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These issues should improve in future releases after some refactoring.
IE: It should be possible to comprise a chunked item of more than one chunk
size, alleviating the last-chunk inefficiency.&lt;/p&gt;
&lt;p&gt;To get the most out of this feature, we again recommend you start memcached
with &lt;code&gt;-o modern&lt;/code&gt;, or many of its new defaults. This allows it to reassign
memory as necessary and improves the LRU algorithm significantly.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.28.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.28..1.4.29&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.29&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    17	dormando
     1	David Oliveira
     1	Eiichi Tsukata&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes143/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes143/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.3 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-143-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-143-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2009-11-07 Sat&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.3.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.3.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a maintenance release of memcached featuring mostly bug fixes
and one new feature.&lt;/p&gt;
&lt;h4&gt;RC history&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;rc-history&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#rc-history&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;rc2 fixes a multiget bug that showed up in rc1.  A bug was not filed,
but it was found and patched at roughly the same time.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Critical Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;critical-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#critical-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Malicious input can crash server. bug102&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Non-critical Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;non-critical-fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#non-critical-fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Removed special case in slab sizing for factor 2. bug56&lt;/li&gt;
&lt;li&gt;Provide better errors for deletion scenarios. bug3&lt;/li&gt;
&lt;li&gt;Fix get stats accounting. bug104&lt;/li&gt;
&lt;li&gt;Ignore stats prefix for keys without a delimiter. bug96&lt;/li&gt;
&lt;li&gt;Work around rpm&amp;rsquo;s broken concept of versions more. bug98&lt;/li&gt;
&lt;li&gt;Use slab class growth factor limit. bug57&lt;/li&gt;
&lt;li&gt;Added LSB section to init script. bug54&lt;/li&gt;
&lt;li&gt;Documentation fixes&lt;/li&gt;
&lt;li&gt;Various build fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Itemized List of Bugs Closed&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;itemized-list-of-bugs-closed&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#itemized-list-of-bugs-closed&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;If a bug shows up in this list that wasn&amp;rsquo;t specifically mentioned
above, it&amp;rsquo;s either too minor to mention specifically or the bug was
closed by introducing a test that proves that the bug, as described,
does not exist.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bug3&lt;/li&gt;
&lt;li&gt;bug54&lt;/li&gt;
&lt;li&gt;bug56&lt;/li&gt;
&lt;li&gt;bug57&lt;/li&gt;
&lt;li&gt;bug62&lt;/li&gt;
&lt;li&gt;bug67&lt;/li&gt;
&lt;li&gt;bug68&lt;/li&gt;
&lt;li&gt;bug69&lt;/li&gt;
&lt;li&gt;bug96&lt;/li&gt;
&lt;li&gt;bug97&lt;/li&gt;
&lt;li&gt;bug98&lt;/li&gt;
&lt;li&gt;bug101&lt;/li&gt;
&lt;li&gt;bug102&lt;/li&gt;
&lt;li&gt;bug104&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Support for SASL Authentication&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;support-for-sasl-authentication&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#support-for-sasl-authentication&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Some installations of memcached are not in controlled environments
where simple network filtering keeps bad guys out of your stuff.  To
help with those other environments, we&amp;rsquo;ve introduced SASL support.
You can read more about it here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/memcached/memcached/wiki/SASLHowto&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/SASLHowto&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;New perl tool &lt;code&gt;damemtop&lt;/code&gt; in scripts/&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-perl-tool-damemtop-in-scripts&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-perl-tool-damemtop-in-scripts&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;dormando&amp;rsquo;s awesome memcached top - a new commandline perl tool for
monitoring small to large memcached clusters. Supports monitoring
arbitrary statistics. See scripts/README.damemtop for more information.&lt;/p&gt;
&lt;p&gt;This tool is intended to replace memcached-tool, but not yet.&lt;/p&gt;
&lt;h4&gt;Also Noteworthy, Slab Optimizations&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;also-noteworthy-slab-optimizations&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#also-noteworthy-slab-optimizations&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Objects on the larger end of the limit should be generally more memory
efficient now as more slabs are created (thus are more granular).&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.2.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.2..1.4.3&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    15  Dustin Sallings
    10  Trond Norbye
     5  dormando
     2  Colin Pitrat
     1  Monty Taylor
     1  Chang Song
     1  CaptTofu
     1  Tomash Brechko&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1430/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1430/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.30 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1430-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1430-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-8-11&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.30.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.30.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Bugfix release, with a critical fix to large item support.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Add MemoryDenyWriteExecute to the systemd service&lt;/li&gt;
&lt;li&gt;Handle end of line comment on memcached.conf&lt;/li&gt;
&lt;li&gt;Add missing parameters and escape hypens as minus to manpage&lt;/li&gt;
&lt;li&gt;Modernize unit file in systemd&lt;/li&gt;
&lt;li&gt;crawler now uses rate limiter sleeps properly (CPU overusage)&lt;/li&gt;
&lt;li&gt;add slab_chunk_max to &lt;code&gt;stats settings&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Importantly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fix over-allocating with large item support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you set &lt;code&gt;-I 2m&lt;/code&gt;, memcached was allocating 2 megabytes of memory per page,
then only using 1mb. This would lead to it hitting the malloc limit with only
50% of the memory available before. This gets worse the more distant &lt;code&gt;-I&lt;/code&gt; is
from 1MB.&lt;/p&gt;
&lt;p&gt;If you are still seeing issues with memory efficiency with large item support
(&lt;code&gt;-I&lt;/code&gt; set higher than 1m default), try the startup setting: &lt;code&gt;-o slab_chunk_max=524288&lt;/code&gt;
Most workloads will function fine, and it should nearly always be better than
how memory efficiency worked prior to the new feature (when using large
items).&lt;/p&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.29.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.29..1.4.30&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.30&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.30&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     6	dormando
     2	Guillaume Delacour
     1	Craig Andrews
     1	Remi Collet&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1431/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1431/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.31 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1431-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1431-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-8-19&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.31.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.31.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Big new feature: &lt;code&gt;lru_crawler metadump all&lt;/code&gt;, will now dump (most of) the metadata
for (all of) the items in the cache. As opposed to cachedump, it does not
cause severe performance problems and has no limits on the amount of keys that
can be dumped.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;More fixes for defaults related to large item support.&lt;/li&gt;
&lt;li&gt;Several improvements to how the LRU crawler&amp;rsquo;s default background job is
launched. Should be less aggressive.&lt;/li&gt;
&lt;li&gt;Fix LRU crawler rate limiting sleep never actually being used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If &lt;code&gt;-o modern&lt;/code&gt; is in use (or at least &lt;code&gt;-o lru_crawler&lt;/code&gt;), a new command is
usable: &lt;code&gt;lru_crawler metadump [all|1|2|3]&lt;/code&gt;. You may dump all of the metadata for a
particular slab class, a list of slab classes, or all slab classes.&lt;/p&gt;
&lt;p&gt;This is useful for inspection, pulling cache data from one server to another,
etc.&lt;/p&gt;
&lt;p&gt;This is not a way to replicate a cache: it is an inconsistent
non-multiversioned grab of the key storage. It makes a best effort to not
include duplicates but a small number can happen on busy servers.&lt;/p&gt;
&lt;p&gt;Many thanks for Netflix, for sponsoring and patiently testing the work done in
this release!&lt;/p&gt;
&lt;p&gt;More details and code can be seen in the PR:
&lt;a href=&#34;https://github.com/memcached/memcached/pull/193&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/pull/193&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.30.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.30..1.4.31&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.31&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.31&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    14	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1432/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1432/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.32 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1432-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1432-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-10-12&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.32.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.32.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Bugfix release. One important bug introduced in 1.4.29 could cause OOM errors
if you have many items with keys longer than the data.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix missing evicted_time display in stats output&lt;/li&gt;
&lt;li&gt;Update old ChangeLog note to visit Github wiki&lt;/li&gt;
&lt;li&gt;fix OOM errors with newer LRU&lt;/li&gt;
&lt;li&gt;Misc typo fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;None this time!&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.31.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.31..1.4.32&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.32&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     4	dormando
     1	Adam Chainz
     1	Giovanni Bechis
     1	akisssa&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1433/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1433/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.33 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1433-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1433-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2016-10-31&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.33.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.33.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Serious remote code execution bugs are fixed in this release.&lt;/p&gt;
&lt;p&gt;The bugs are related to the binary protocol as well as SASL authentication of the
binary protocol.&lt;/p&gt;
&lt;p&gt;If you do not use the binary protocol at all, a workaround is to start
memcached with &lt;code&gt;-B ascii&lt;/code&gt; - otherwise you will need the patch in this release.&lt;/p&gt;
&lt;p&gt;The diff may apply cleanly to older versions as the affected code has not
changed in a long time.&lt;/p&gt;
&lt;p&gt;Full details of the issue may be found here:
&lt;a href=&#34;http://blog.talosintel.com/2016/10/memcached-vulnerabilities.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.talosintel.com/2016/10/memcached-vulnerabilities.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CVE reported by cisco talos&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.32.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.32..1.4.33&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.33&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.33&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     1	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1434/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1434/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.34 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1434-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1434-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-1-7&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.34.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.34.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Larger than average bugfix release. :) Important fix for users of SASL
authentication.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;-o modern&lt;/code&gt; switches to -h&lt;/li&gt;
&lt;li&gt;metadump: Fix preventing dumping of class 63&lt;/li&gt;
&lt;li&gt;Fix cache_memlimit bug for &amp;gt; 4G values&lt;/li&gt;
&lt;li&gt;metadump: ensure buffer is flushed to client before finishing&lt;/li&gt;
&lt;li&gt;Number of small fixes/additions to new logging&lt;/li&gt;
&lt;li&gt;add logging endpoint for LRU crawler&lt;/li&gt;
&lt;li&gt;evicted_active counter for LRU maintainer&lt;/li&gt;
&lt;li&gt;stop pushing NULL byte into watcher stream&lt;/li&gt;
&lt;li&gt;Scale item hash locks more with more worker threads (minor performance)&lt;/li&gt;
&lt;li&gt;Further increase systemd service hardening&lt;/li&gt;
&lt;li&gt;Missing necessary header for atomic_inc_64_nv() used in logger.c (solaris)&lt;/li&gt;
&lt;li&gt;Fix print format for idle timeout thread&lt;/li&gt;
&lt;li&gt;Improve binary sasl security fixes&lt;/li&gt;
&lt;li&gt;Fix clang compile error&lt;/li&gt;
&lt;li&gt;Widen systemd caps to allow maxconns to increase&lt;/li&gt;
&lt;li&gt;Add -X option to disable cachedump/metadump&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t double free in lru_crawler on closed clients&lt;/li&gt;
&lt;li&gt;Fix segfault if metadump client goes away&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;None&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.33.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.33..1.4.34&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.34&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.34&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    21	dormando
     1	Alexander Pyhalov
     1	Craig Andrews
     1	Nick&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1435/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1435/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.35 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1435-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1435-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-2-26&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.35.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.35.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Significant fixes to new LRU algorithm. Also performance and memory overhead
improvements. You are even more likely to see improved hit ratios when using
&lt;code&gt;-o modern&lt;/code&gt;. Please try it out!&lt;/p&gt;
&lt;p&gt;Looking for contributors! The relevant wiki has been updated:
&lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you use memcached, please consider helping out! Much appreciation to
those who already do.&lt;/p&gt;
&lt;p&gt;This version is getting close to what I envision 1.5.0 will be. The plan for
1.5.0 (as of this writing) is to simply switch the defaults to what is
reflected in &lt;code&gt;-o modern&lt;/code&gt;, no or minimal other changes will be included in that
release.&lt;/p&gt;
&lt;p&gt;To prepare yourself for the 1.5.0 release, again please try one instance with
&lt;code&gt;-o modern&lt;/code&gt; options.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;init.d script status check routine&lt;/li&gt;
&lt;li&gt;Print with more-restricted format string to fix compiler warning with gcc 7&amp;rsquo;s -Wformat-truncation.&lt;/li&gt;
&lt;li&gt;Display HOT/WARM tail age in &lt;code&gt;stats items&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Active items in HOT` flow to WARM (algorithm fix)&lt;/li&gt;
&lt;li&gt;Moves to WARM requires two hits overall (algorithm fix)&lt;/li&gt;
&lt;li&gt;LRU maintainer performance: per-class sleep scheduling&lt;/li&gt;
&lt;li&gt;Allow limiting the internal LRU crawler run length&lt;/li&gt;
&lt;li&gt;Stop using atomics for item refcount management (performance)&lt;/li&gt;
&lt;li&gt;Make the conn suffix list the same as item list (performance)&lt;/li&gt;
&lt;li&gt;Do LRU-bumps while already holding item lock (performance)&lt;/li&gt;
&lt;li&gt;Reduce add_iov() work for TCP connections (performance)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&amp;ldquo;lru&amp;rdquo; command for setting LRU parameters at runtime&lt;/li&gt;
&lt;li&gt;Allow switching LRU algo&amp;rsquo;s at runtime&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The full documentation is in doc/protocol.txt under &amp;ldquo;LRU Tuning&amp;rdquo;. Since a few
years ago, memcached supports the original &amp;ldquo;flat&amp;rdquo; LRU algorithm alongside a
segmented LRU. With the &amp;ldquo;lru&amp;rdquo; ASCII command you can tune settings live, or
even switch between algorithms entirely!&lt;/p&gt;
&lt;p&gt;So long as memcached is started with &lt;code&gt;-o modern&lt;/code&gt; or similar, you can
experiment with the hit ratio of differnt algorithms or options without
restarting with a cold cache each time.&lt;/p&gt;
&lt;p&gt;IE: &lt;code&gt;lru mode flat&lt;/code&gt; to switch back from segmented. Or &lt;code&gt;lru mode segmented&lt;/code&gt; to
flip back again.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lru tune [etc]&lt;/code&gt; is for adjusting the segmented LRU options. I strive for
sensible defaults, but that may not apply to everyone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New &lt;code&gt;TEMP_LRU&lt;/code&gt; feature&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &amp;ldquo;expirezero does not evict&amp;rdquo; feature is gone, and in its place is a
&amp;ldquo;temporary LRU&amp;rdquo;. Items set with TTL&amp;rsquo;s under a specific value are put into a
special &amp;ldquo;temporary&amp;rdquo; LRU. These items are not evictable, and the LRU maintainer
background thread reaps from the tail as they expire.&lt;/p&gt;
&lt;p&gt;This can help a lot if you have mixed workloads with short and long TTL&amp;rsquo;s, as
items with short TTL&amp;rsquo;s could be freed automatically sooner than any other
background process. Do not set this too high!&lt;/p&gt;
&lt;p&gt;This can be enabled with &lt;code&gt;-o temporary_ttl=60&lt;/code&gt; for a &amp;ldquo;60 seconds or lower&amp;rdquo;, or
live via &lt;code&gt;lru temp_ttl 60&lt;/code&gt;. &lt;code&gt;lru temp_ttl -1&lt;/code&gt; disables the feature live.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;autotuning for HOT/WARM LRU&amp;rsquo;s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default the HOT and WARM LRU&amp;rsquo;s can take up to 32% of memory each. I&amp;rsquo;ve
found people with mixed TTL workloads will end up with close to 1/3rd of
memory utilized. With this change a couple more tunables (adjustable live via
&lt;code&gt;lru tune&lt;/code&gt;) are added, with hopefully sensible defaults.&lt;/p&gt;
&lt;p&gt;Items are now moved out of HOT if they are idle more than 3600 seconds &lt;em&gt;or&lt;/em&gt;
memory usage is above 32%.&lt;/p&gt;
&lt;p&gt;Items are now moved out of WARM if they are idle more than twice the idle time
of COLD, &lt;em&gt;or&lt;/em&gt; memory usage is above 32%. This is to encourage fairness between
items that were active briefly but never again and newer items flowing through
COLD. Sometimes WARM idle time could reach weeks!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Conditionally don&amp;rsquo;t inline the ASCII VALUE line (memory
efficiency/performance)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since the first releases, memcached has written an inlined buffer of the ASCII
protocol response into items. This uses some small amount of memory in
exchange for avoiding a sprintf on every read. In this release, a very fast
itoa library is used and the header is written into a temporary buffer.&lt;/p&gt;
&lt;p&gt;This means ASCII reads are very slightly slower, however it also means SETs
are faster. Also the binary protocol never used this header, so binprot SETs
are improved and memory efficiency is improved for small objects.&lt;/p&gt;
&lt;p&gt;A SET would usually sprintf twice. Other performance tweaks were included,
this release should be faster overall than any previous one. Currently this is
enabled within &lt;code&gt;-o modern&lt;/code&gt; or &lt;code&gt;-o no_inline_ascii_resp&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.34.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.34..1.4.35&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.35&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.35&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    34	dormando
     1	Joe Orton
     1	Juliy V. Chirkov&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1436/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1436/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.36 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1436-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1436-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-3-19&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.36.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.36.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Important bug fix that could lead to a hung slab mover. Also improves memory
efficiency of chunked items.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix refcount leak in LRU bump buf&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Chained items were introduced in 1.4.29. With &lt;code&gt;-o modern&lt;/code&gt; items sized 512k or
higher are created by chaining 512k chunks together. This made increasing the
max item size (&lt;code&gt;-I&lt;/code&gt;) more efficient in many scenarios as the slab classes no
longer have to be stretched to cover the full space.&lt;/p&gt;
&lt;p&gt;There was still an efficiency hole for items 512k-&amp;gt;5mb or so where the overhead
is too big for the size of the items. This change fixes it by using chunks
from other slab classes in order to &amp;ldquo;cap&amp;rdquo; off chained items. With this change
larger items should be more efficient than the original slab allocator in all
cases.&lt;/p&gt;
&lt;p&gt;Chunked items are only used with &lt;code&gt;-o modern&lt;/code&gt; or explicitly changing &lt;code&gt;-o slab_chunk_max&lt;/code&gt;
It is not recommended to set &lt;code&gt;slab_chunk_max&lt;/code&gt; to be smaller than 256k at this
time.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.35.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.35..1.4.36&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.36&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.36&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     2	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1437/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1437/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.37 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1437-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1437-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-6-4&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.37.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.37.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A good number of small community fixes (see below). Number of crash fixes and
a 10 year old memory leak as well!&lt;/p&gt;
&lt;p&gt;A new script (scripts/memcached-automove) is now included. This is a beta test
of the slab page automove algorithm we will be moving to, and will be enabled
by default when 1.5.0 lands soon. If you have time, please give it a test and
send us feedback!&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;LRU crawler: avoid running infinitely.&lt;/li&gt;
&lt;li&gt;fix very old memory leak in ASCII multigets.
(when using multiget &lt;code&gt;gets&lt;/code&gt; and keys after the first one are &amp;gt;255 characters)&lt;/li&gt;
&lt;li&gt;remove old slab mover example script.&lt;/li&gt;
&lt;li&gt;fix crash in page mover while using large items&lt;/li&gt;
&lt;li&gt;automover algo python script&lt;/li&gt;
&lt;li&gt;avoid segfault if idle_timeout value is missing.&lt;/li&gt;
&lt;li&gt;fix rare crash in LRU crawler&lt;/li&gt;
&lt;li&gt;sleep more aggressively in some threads&lt;/li&gt;
&lt;li&gt;don&amp;rsquo;t overflow item refcount on get&lt;/li&gt;
&lt;li&gt;fix solaris compilation error&lt;/li&gt;
&lt;li&gt;usability fix for cache_memlimit command&lt;/li&gt;
&lt;li&gt;fix verbose print for idle-kicker&lt;/li&gt;
&lt;li&gt;disable refhang.t test due to flakiness&lt;/li&gt;
&lt;li&gt;fix ordering issue in conn dispatch
(prevents potential hangups)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;LRU crawler scheduling improvements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The LRU crawler&amp;rsquo;s internal run scheduler still predated the segmented LRU. It
would run across each sub-LRU (HOT|WARM|etc), but schedule runs by slab class.&lt;/p&gt;
&lt;p&gt;Now it schedules each sub-class independently. Now it will make more frequent
targeted runs. IE: If you make use of TEMP and store many items that expire
within a few minutes, it will wake up and re-run scans of each active TEMP LRU
instead of timing based on the total size of the slab class.&lt;/p&gt;
&lt;p&gt;It can also re-schedule runs while a previous run is still running. In the
same example, it could continue to wake and scan TEMP LRU&amp;rsquo;s, even if there&amp;rsquo;s a
COLD LRU with 300 million items in it which could take minutes to scan by
itself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;per-LRU hits breakdown under &lt;code&gt;stats items&lt;/code&gt; (&lt;code&gt;hits_to_(hot|warm|cold|temp)&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.36.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.36..1.4.37&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.37&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.37&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    17	dormando
     1	Fumihiro Ito
     1	Grant Mathews
     1	Josh Soref
     1	Peter (Stig) Edwards&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1438/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1438/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.38 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1438-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1438-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-6-24&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.38.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.38.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;NOTE: This is probably the last release before &lt;code&gt;-o modern&lt;/code&gt; becomes the default
and 1.5.0 is released.&lt;/p&gt;
&lt;p&gt;The slab page automover algorithm should be much more fair. It now attempts to
keep the tail ages of slab classes similar. Please let us know how well this
works out!&lt;/p&gt;
&lt;p&gt;The slab page mover can also delete items in order to make progress if it
detects a jam. Previously hot items could indefinitely hold the page mover.&lt;/p&gt;
&lt;p&gt;The rest are minor fixes.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hot_max_age&lt;/code&gt; is now &lt;code&gt;hot_max_factor&lt;/code&gt; - HOT is now limited to 20% of
COLD&amp;rsquo;s age or 20% of total space, whichever comes first.&lt;/li&gt;
&lt;li&gt;sleep longer between slab move runs (1ms instead of 50us)&lt;/li&gt;
&lt;li&gt;automove script: improve algo, add basic test&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slab_rebal&lt;/code&gt;: delete busy items if stuck&lt;/li&gt;
&lt;li&gt;fix LRU maintainer thread slowdown in edge case&lt;/li&gt;
&lt;li&gt;fix rare long background thread pause in hash expansion&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The slab automover algorithm recently would only kick in if there was too many
free chunks in a slab class. If your items simply changed size over time this
was fine, but there were too many edge cases. If slab class 3 periodically
empties a lot of its memory, but slab class 5 will use as much as you have and
still evict, over time 3 will still become starved.&lt;/p&gt;
&lt;p&gt;This new algorithm attempts to keep the youngest evicting slab class to within
80% of the age of the oldest slab class (by default). Ages are averaged over a
window to avoid ping-ponging memory between slab classe.&lt;/p&gt;
&lt;p&gt;It also still aggressively frees memory if too much is free.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.37.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.37..1.4.38&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.38&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.38&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     8	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1439/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1439/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.39 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1439-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1439-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-7-4&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.4.39.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.4.39.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Fixes a reported CVE in binary protocol code. Also adds a trivial 4 byte
reduction in memory usage under &lt;code&gt;-o modern&lt;/code&gt; if client flags aren&amp;rsquo;t used.&lt;/p&gt;
&lt;p&gt;This CVE seems relatively minor; may be able to crash worker threads. I wasn&amp;rsquo;t
able to quickly reproduce a crash but folks should still upgrade when
convenient.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix for CVE-2017-9951&lt;/li&gt;
&lt;li&gt;save four bytes per item if client flags are 0&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If client flags are &amp;ldquo;0&amp;rdquo;, no extra storage is used.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.38.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.38..1.4.39&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.39&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.39&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     2	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes144/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes144/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.4 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-144-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-144-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2009-11-26 Sat&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.4.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.4.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a maintenance release of memcached with a workaround for
common client issue as well as a few new stats.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Add partial backwards compatibility for delete with timeout 0&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;add-partial-backwards-compatibility-for-delete-with-timeout-0&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#add-partial-backwards-compatibility-for-delete-with-timeout-0&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Before version 1.4.0, there was an optional argument to delete that
would allow a client to specify that a deleted object should exist in
the cache after the deletion occurred such that add operations would
fail even though objects did not appear in the cache.&lt;/p&gt;
&lt;p&gt;This feature was removed completely in 1.4.0, but a parser bug caused
it to slip through.  The bug was fixed in 1.4.3.  If anyone was
attempting to use it legitimately in the 1.4 series, it would simply
not work as expected.&lt;/p&gt;
&lt;p&gt;The 1.4.4 backwards compatibility change allows specifically the value
of 0 (i.e. non-lingering delete), while continuing to reject others.
This will satisfy clients that always wish to send a value even when
they do not wish the item to linger.&lt;/p&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;New Stats&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-stats&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-stats&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;==== auth_enabled_sasl ====&lt;/p&gt;
&lt;p&gt;This is a general stat that indicates whether SASL authentication is
enabled or not.&lt;/p&gt;
&lt;p&gt;==== auth_cmds ====&lt;/p&gt;
&lt;p&gt;Indicates the total number of authentication attempts.&lt;/p&gt;
&lt;p&gt;==== auth_errors ====&lt;/p&gt;
&lt;p&gt;Indicates the number of failed authentication attempts.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.3.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.3..1.4.4&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  [https://github.com/memcached/memcached/wiki/DevelopmentRepos]&lt;/li&gt;
&lt;li&gt;Web View: [http://github.com/memcached/memcached/commits/1.4.4]&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     2  Dustin Sallings
     2  Matt Ingenthron
     1  dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes145/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes145/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.5 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-145-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-145-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2010-04-03&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.5.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.5.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a maintenance release with some build fixes, doc fixes, and
one new stat.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Properly detect CPU alignment on ARM. bug100&lt;/li&gt;
&lt;li&gt;Remove 1MB assertion. bug 119&lt;/li&gt;
&lt;li&gt;More automake versions supported.&lt;/li&gt;
&lt;li&gt;Compiler warning fixes for OpenBSD.&lt;/li&gt;
&lt;li&gt;potential buffer overflow in vperror&lt;/li&gt;
&lt;li&gt;Report errors opening pidfiles using vperror&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;New stat: reclaimed&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-stat-reclaimed&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-stat-reclaimed&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;This stat reports the number of times an entry was stored using memory
from an expired entry.&lt;/p&gt;
&lt;h4&gt;sasl_pwdb for more simple auth deployments&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;sasl_pwdb-for-more-simple-auth-deployments&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sasl_pwdb-for-more-simple-auth-deployments&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&amp;ndash;enable-sasl-pwdb allows memcached to use it&amp;rsquo;s own password file and
verify a plaintext password.&lt;/p&gt;
&lt;p&gt;The file is specified with the environment variable
MEMCACHED_SASL_PWDB, and is a plain text file with the following
syntax:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;username:password&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;Please note that you have to specify &amp;ldquo;mech_list: plain&amp;rdquo; in your sasl
config file for this to work.&lt;/p&gt;
&lt;p&gt;Ex:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;   echo &amp;#34;mech_list: plain&amp;#34; &amp;gt; memcached.conf
   echo &amp;#34;myname:mypass&amp;#34; &amp;gt; /tmp/memcached-sasl-db
   export MEMCACHED_SASL_PWDB=/tmp/memcached-sasl-db
   export SASL_CONF_PATH=`pwd`/memcached.conf
   ./memcached -S -v&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;and you should be able to use your favorite memcached client with sasl
support to connect to the server.&lt;/p&gt;
&lt;p&gt;(Please note that not all SASL implementations support
SASL_CB_GETCONF, so you may have to install the sasl config
(memcached.conf) to the systemwide location)&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.4.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.4..1.4.5&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    6  Trond Norbye
    3  Paul Lindner
    2  Dustin Sallings
    1  Brad Fitzpatrick
    1  Jørgen Austvik&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes146/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes146/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.6 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-146-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-146-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2011-07-15&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.6.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.6.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a maintenance release with some build fixes, many small bug fixes, and
a few major bug fixes. incr/decr are now actually atomic, and a crash with
hitting the max connection limit while using multiple interfaces has been
fixed.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Gcc on Solaris sparc wants -R and not -rpath&lt;/li&gt;
&lt;li&gt;Issue 121: Set the runtime path when &amp;ndash;with-libevent is used&lt;/li&gt;
&lt;li&gt;Fix autogen failure when unable to find supported command.&lt;/li&gt;
&lt;li&gt;fix race crash for accepting new connections&lt;/li&gt;
&lt;li&gt;fix incr/decr race conditions for binary prot&lt;/li&gt;
&lt;li&gt;fix incr/decr race conditions for ASCII prot&lt;/li&gt;
&lt;li&gt;Compile fix (-Werror=unused-but-set-variable warnings)&lt;/li&gt;
&lt;li&gt;Bind each UDP socket to an a single worker thread in multiport env&lt;/li&gt;
&lt;li&gt;Add support for using multiple ports&lt;/li&gt;
&lt;li&gt;Issue 154: pid file out of sync (created before socket binding)&lt;/li&gt;
&lt;li&gt;Issue 163: Buggy mem_requested values&lt;/li&gt;
&lt;li&gt;Fix cross compilation issues in configure&lt;/li&gt;
&lt;li&gt;Issue 140 - Fix age for items stats&lt;/li&gt;
&lt;li&gt;Issue 131 - ChangeLog is outdated&lt;/li&gt;
&lt;li&gt;Issue 155: bind to multiple interface&lt;/li&gt;
&lt;li&gt;Issue 161 incorrect allocation in cache_create&lt;/li&gt;
&lt;li&gt;Fix type-punning issues exposed with GCC 4.5.1&lt;/li&gt;
&lt;li&gt;Simplify stats aggregation code&lt;/li&gt;
&lt;li&gt;Reverse backward expected/actual params in test&lt;/li&gt;
&lt;li&gt;Issue 152: Fix error message from mget&lt;/li&gt;
&lt;li&gt;Refuse to start if we detect libevent 1.[12]&lt;/li&gt;
&lt;li&gt;Fix compilation issue on Solaris 9 wrt isspace() macro - Resolves issue 111&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Multiple port binding&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;multiple-port-binding&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#multiple-port-binding&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;You may now specify multiple addresses by listing -l multiple times.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.5.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.5..1.4.6&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    13  Trond Norbye
     6  dormando
     5  Dan McGee
     2  Paul Lindner
     1  Jon Jensen
     1  nirvanazc&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes147/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes147/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.7 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-147-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-147-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2011-08-16&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.7.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.7.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is a maintenance release with many small bugfixes. Now (mostly) immune
from time travelers.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Use a monotonically increasing timer&lt;/li&gt;
&lt;li&gt;Immediately expire items when given a negative expiration time&lt;/li&gt;
&lt;li&gt;fix memcached-tool to print about all slabs&lt;/li&gt;
&lt;li&gt;Properly daemonize memcached for debian&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t permanently close UDP listeners on error&lt;/li&gt;
&lt;li&gt;Allow memcached-init to start multiple instances (not recommended)&lt;/li&gt;
&lt;li&gt;Issue 214: Search for network libraries before searching for libevent&lt;/li&gt;
&lt;li&gt;Issue 213: Search for clock_gettime in librt&lt;/li&gt;
&lt;li&gt;Issue 115: accont for CAS in item_size_ok&lt;/li&gt;
&lt;li&gt;Fix incredibly slim race for maxconns handler. Should no longer hang ever&lt;/li&gt;
&lt;li&gt;Issue 183 - Reclaim items dead by flush_all&lt;/li&gt;
&lt;li&gt;Issue 200: Don&amp;rsquo;t fire dtrace probe as the last thing in a function&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Montonic Clock&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;montonic-clock&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#montonic-clock&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;This isn&amp;rsquo;t really a feature, but is the main change. If your system has
clock_gettime with CLOCK_MONOTONIC support, memcached will attempt to use it.
If your clock does wild adjustments, memcached will do its best to continue to
count forward and not backward.&lt;/p&gt;
&lt;p&gt;However, if you use the &amp;ldquo;expiration is an absolute time&amp;rdquo; feature, where
specifying an value expiration time as a specific date, it can still break.
You must ensure that memcached is started after your clocks have been
synchronized. This has always been the case, though.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.6.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.6..1.4.7&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     9  dormando
     6  Trond Norbye
     1  Clint Byrum
     1  Gordon Franke&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes148/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes148/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.8 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-148-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-148-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2011-10-04&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.8.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.8.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Feature and bugfix release. New Touch commands, counters, and a change to
connection limit functionality.&lt;/p&gt;
&lt;p&gt;Included is an important bugfix for binary protocol users. The binary get
command was not activating the LRU algorithm. Fetching an item would not
prevent it from getting expired early.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fix to write correct pid from start-memcached&lt;/li&gt;
&lt;li&gt;Fix to enable LRU when using binary protocol&lt;/li&gt;
&lt;li&gt;Upgrade stats items counters to 64bit&lt;/li&gt;
&lt;li&gt;Add new stats expired_unfetched, evicted_unfetched&lt;/li&gt;
&lt;li&gt;Allow setting initial size of the hash table&lt;/li&gt;
&lt;li&gt;Expose stats for the internal hash table&lt;/li&gt;
&lt;li&gt;bug220: incr would sometimes return the previous item&amp;rsquo;s CAS&lt;/li&gt;
&lt;li&gt;Fixed bug on multi get processing&lt;/li&gt;
&lt;li&gt;Experimental maxconns_fast option&lt;/li&gt;
&lt;li&gt;Add an ASCII touch command&lt;/li&gt;
&lt;li&gt;Add binary GATK/GATKQ&lt;/li&gt;
&lt;li&gt;Backport binary TOUCH/GAT/GATQ commands&lt;/li&gt;
&lt;li&gt;Issue 221: Increment treats leading spaces as 0&lt;/li&gt;
&lt;li&gt;Fix compile error on OS X&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;Touch Commands&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;touch-commands&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#touch-commands&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Binary Touch/GAT commands were backported from 1.6. New GATK/GATKQ commands
were added for completeness. Finally, an Ascii protocol &lt;code&gt;touch&lt;/code&gt; command was
also added.&lt;/p&gt;
&lt;p&gt;Touch commands are used to update the expiration time of an existing item
without fetching it. Say you have a counter set to expire in five minutes, but
you may want to push back the expiration time by five more minutes, or change
it to 15 minutes. With touch, you can do that.&lt;/p&gt;
&lt;p&gt;The binary protocol also adds GAT commands (Get And Touch), which allow you to
fetch an item and simultaneously update its expiration time.&lt;/p&gt;
&lt;h4&gt;Fast Connection Limit Handling&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fast-connection-limit-handling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fast-connection-limit-handling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A new option, &lt;code&gt;-o&lt;/code&gt;, has appeared! With -o new, experimental, or highly
specific options are given full names. The first of which is &lt;code&gt;maxconns_fast&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;
This option changes the way the maximum connection limit is handled. By
default, when memcached runs out of file descriptors, it stops listening for
new connections. When this happens, connections will sit in the listen backlog
(defaulting to 1024, and adjustable with the -b option). Once some connections
close off, memcached will starts accepting new connections again and they will
be served.

This is undesireable as it can cause clients to delay or timeout for a long
period of time. Long enough that it may be quicker to treat the items as a
cache miss.

When a client connects and memcached is configured with maxconns_fast, it
writes an error to the client and immediately closes the connection. This is
similar to how MySQL operates, whereas the default is similar to Apache.

It is experimental as it is unknown how clients will handle this change.
Please help test and report any issues to upstream client maintainers!

#### Internal Hash Table&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;p&gt;STAT hash_power_level 16
STAT hash_bytes 524288
STAT hash_is_expanding 0&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;
Now it&amp;#39;s possible to see how much memory the hash table itself uses. This can
be useful for deciding on RAM limits for very large instances.

There is also a new option for setting the size of the hash table on startup:

```$ memcached -o hashpower=20}}}

If you run instances with many millions of items, and items are added very
rapidly on a restart, it may be desireable to _presize_ the hash table.
Normally memcached will dynamically grow the hash table as needed, and this
operation is generally very low overhead. If you put decals on your &amp;#39;96 Mazda
grapefruit shootermobile, you may like this option.

Just examine the hash_power_level before restarting your instances, and adjust
the startup command.

#### expired_unfetched, evicted_unfetched

The two stats represent items which expired and memory was reused, and valid
items which were evicted, but never touched by get/incr/append/etc operations
in the meantime.
    
Useful for seeing how many wasted items are being set and then rolling out
through the bottom of the LRU&amp;#39;s.

If these counters are high, you may consider auditing what is being put into
the cache.

### Contributors

The following people contributed to this release since 1.4.7.

Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.

Note that this is just a summary of how many changes each person made
which doesn&amp;#39;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of `git log 1.4.7..1.4.8` or use a web view.

  * Repo list:  https://github.com/memcached/memcached/wiki/DevelopmentRepos
  * Web View: http://github.com/memcached/memcached/commits/1.4.8&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;12  dormando
 2  Daniel Pañeda
 2  Trond Norbye
 1  Dustin Sallings
 1  Nate
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes149/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes149/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.4.9 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-149-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-149-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2011-10-18&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Download Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://memcached.org/files/old/memcached-1.4.9.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://memcached.org/files/old/memcached-1.4.9.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Small bugfix release. Mainly fixing a critical issue where using -c to
increase the connection limit was broken in 1.4.8. If you are on 1.4.8, an
upgrade is highly recommended.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Add a systemd service file&lt;/li&gt;
&lt;li&gt;Fix some minor typos in the protocol doc&lt;/li&gt;
&lt;li&gt;Issue 224 - check retval of main event loop&lt;/li&gt;
&lt;li&gt;Fix -c so maxconns can be raised above default.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;No new features in this version.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.8.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.8..1.4.9&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list:  &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.4.9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.4.9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     3	dormando
     1	Matt Ingenthron
     1	Miklos Vajna&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes150/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes150/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.5.0 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-150-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-150-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-7-21&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.5.0.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.5.0.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This release makes the options &lt;code&gt;-o modern&lt;/code&gt; enabled in 1.4.39 the default
options. It also adds &amp;ndash;long-options (see &amp;ndash;help|-h) if the platform supports
it and fixes a small bug.&lt;/p&gt;
&lt;p&gt;People who were not running -o modern before should see wins in hit rate or
reductions in memory requirements. Please report any regressions.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix for musl libc: avoid huge stack allocation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This release is the culmination of many years of part-time work.&lt;/p&gt;
&lt;p&gt;Memcached was introduced in 2003, two years before the first dual-core opteron
x86 processor. Since then computers have added huge numbers of cores and
vastly expanded memory.&lt;/p&gt;
&lt;p&gt;Recently the cost ratio of memory to CPU has started to shift a bit. For a few
years memory prices will likely be inflated (though this always comes in
cycles). I&amp;rsquo;ve managed to keep memcached&amp;rsquo;s performance and thread scalability
very high. Now it makes use of some extra CPU in background threads in order
to reduce memory usage. You may find you need half as much RAM to get the same
hit ratio, or it could be the same as what you have now.&lt;/p&gt;
&lt;p&gt;The new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LRU crawler to background-reclaim memory. Mixed-TTL&amp;rsquo;s and LRU reordering
leaves many holes, making it difficult to properly size an instance.&lt;/li&gt;
&lt;li&gt;Segmented LRU. HOT/WARM/COLD and background processing should try harder to
keep semi-active items in memory for longer.&lt;/li&gt;
&lt;li&gt;Automated slab rebalancing. Avoiding slab stagnation as objects change size
over time.&lt;/li&gt;
&lt;li&gt;Faster hash table lookups with murmur3 algorithm (though it&amp;rsquo;s been so long
this is now outdated again;)&lt;/li&gt;
&lt;li&gt;Reduce memory requirements per-item by a few bytes here and there&lt;/li&gt;
&lt;li&gt;Immediately close connections when hitting the connection limit, instead of
hanging until a spot opens up.&lt;/li&gt;
&lt;li&gt;Items larger than 512k (by default) are assembled by stacking multiple
chunks together. Now raising the item size above 1m doesn&amp;rsquo;t drop memory
efficiency by spreading out slab classes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These features have been slowly assembled, tuned, and tested behind feature
flags for far too long. Recently after finishing reworking the automated page
mover, I felt confident enough to flip the defaults around and call this thing
1.5.x.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-o modern&lt;/code&gt; will live on as new feature flags appear. Though they may not take
as long to migrate to the actual defaults.&lt;/p&gt;
&lt;p&gt;If you want the old defaults, &lt;code&gt;-o no_modern&lt;/code&gt; will work for a while.&lt;/p&gt;
&lt;p&gt;Some old flags will be deprecated (old maxconns handling, and the inverse of
the byte-savings, for two) and eventually removed.&lt;/p&gt;
&lt;p&gt;A great thanks goes out to Andrew Rodland (hobbs) for running production tests
of the adjusted slab page algorithm. Help from the community greatly reduces
the time it takes for me to find bugs and gain confidence in features.&lt;/p&gt;
&lt;p&gt;Another great thanks to &lt;a href=&#34;https://www.packet.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.packet.net/&lt;/a&gt; - Their donation of test
hardware has been invaluable while I run endless burn-in tests on various
features. It&amp;rsquo;s crazy the weird bugs you find while shoveling tens of millions
of qps at a single instance while moving memory around randomly!&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;d be great to hear from users as well. It&amp;rsquo;s been a long time and there are
a lot of key/value stores now. If this work is truly useful we&amp;rsquo;ll keep it up.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.4.39.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.4.39..1.5.0&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.5.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     2	dormando&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes151/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes151/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.5.1 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-151-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-151-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2017-8-24&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.5.1.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.5.1.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Bugfix release for the 1.5.0 series. Includes &lt;code&gt;--enable-seccomp&lt;/code&gt; configure
option for enabling linux seccomp privilege dropping.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;add &lt;code&gt;max_connections&lt;/code&gt; stat to &amp;lsquo;stats&amp;rsquo; output&lt;/li&gt;
&lt;li&gt;Drop sockets from obviously malicious command strings (HTTP/)&lt;/li&gt;
&lt;li&gt;stats cachedump: now more likely to show data&lt;/li&gt;
&lt;li&gt;memcached-tool: fix slab &lt;code&gt;Full?&lt;/code&gt; column&lt;/li&gt;
&lt;li&gt;fix null pointer ref in logger for bin update cmd&lt;/li&gt;
&lt;li&gt;default to unix sockets for tests, make them much less flaky&lt;/li&gt;
&lt;li&gt;PARALLEL=9 make test -&amp;gt; runs prove in parallel&lt;/li&gt;
&lt;li&gt;fix flaky stats.t test&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&amp;ndash;enable-seccomp compiles in options for strict privilege reduction in linux.
see output of &lt;code&gt;-h&lt;/code&gt; for more information.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.5.0.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.5.0..1.5.1&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.5.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.5.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;    10	dormando
     4	Stanisław Pitucha
     1	Ben Evans
     1	David Schoen&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1510/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1510/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.5.10 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1510-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1510-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2018-8-10&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.5.10.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.5.10.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Build, Bugfixes, and &amp;hellip; Blocks?&lt;/p&gt;
&lt;p&gt;NOTE: For extstore users, &lt;code&gt;-o ext_page_count=&lt;/code&gt; is deprecated and no longer works.&lt;/p&gt;
&lt;p&gt;To specify device size: &lt;code&gt;-o ext_path=/d/m/e:500G&lt;/code&gt; - extstore figures out the
page count based on your desired page size. M|G|T|P supported.&lt;/p&gt;
&lt;p&gt;This change is disruptive, but likely the last time I&amp;rsquo;ll do this. There is
higher confidence in extstore every month and people should be ready to rely
on it.
If the arguments change in the future, they will follow a strict deprecation
cycle.&lt;/p&gt;
&lt;p&gt;Also, basic JBOD support for extstore is here! If you have multiple
similar devices, simply specify &lt;code&gt;ext_path&lt;/code&gt; multiple times and it will stripe
data across them, example:
&lt;code&gt;-o ext_path=/d1/e:1T,ext_path=/d2/e:1T&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make sure you experiment and specify enough &lt;code&gt;ext_threads&lt;/code&gt; to fully utilize the
drives. There&amp;rsquo;s no hard rule on how many IO threads are necessary, but you
need fewer threads for devices with lower latency.&lt;/p&gt;
&lt;p&gt;Future releases will allow mixing different types of devices, ie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;drive A is a small persistent memory (Optane or similar) device&lt;/li&gt;
&lt;li&gt;drive B is a large inexpensive flash SSD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will be able to direct &amp;ldquo;compacted&amp;rdquo;, longer lived items, onto the SSD. Or
drive low TTL items onto the persistent memory, etc. This has been tested,
but requires adjustments to the compaction algorithm before going into
mainline.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fix alignment issues on some ARM platforms for chunked items&lt;/li&gt;
&lt;li&gt;add missing va_end() call to logger_log()&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;basic extstore JBOD support (noted in Overview)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;split storage writer into its own thread&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The extstore storage writer was co-located with the LRU maintenance thread.
This change separates it into its own thread, which brings up the performance
consistency and throughput. This is especially true during benchmarks, which
could easily starve the extstore flush routine of resources. Most users are
unlikely to notice a difference.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.5.9.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.5.9..1.5.10&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.5.10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.5.10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     4	dormando
     1	Gleicon Moraes
     1	Miroslav Lichvar
     1	phantom9999&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/releasenotes/releasenotes1511/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/releasenotes/releasenotes1511/</guid>
      <description>
        
        
        &lt;h3&gt;Memcached 1.5.11 Release Notes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcached-1511-release-notes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcached-1511-release-notes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Date: 2018-10-10&lt;/p&gt;
&lt;h3&gt;Download&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;download&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#download&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.memcached.org/files/memcached-1.5.11.tar.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.memcached.org/files/memcached-1.5.11.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Fixes broken test and small extstore optimization.&lt;/p&gt;
&lt;h3&gt;Fixes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fixes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fixes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;extstore: balance IO thread queues&lt;/li&gt;
&lt;li&gt;t/lru-maintainer.t: check for WARM item earlier, fixing race condition on
some platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;new-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#new-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;None.&lt;/p&gt;
&lt;h3&gt;Contributors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contributors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contributors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The following people contributed to this release since 1.5.10.&lt;/p&gt;
&lt;p&gt;Note that this is based on who contributed changes, not how they were
done.  In many cases, a code snippet on the mailing list or a bug
report ended up as a commit with your name on it.&lt;/p&gt;
&lt;p&gt;Note that this is just a summary of how many changes each person made
which doesn&amp;rsquo;t necessarily reflect how significant each change was.
For details on what led up into a branch, either grab the git repo and
look at the output of &lt;code&gt;git log 1.5.10..1.5.11&lt;/code&gt; or use a web view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repo list: &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web View: &lt;a href=&#34;http://github.com/memcached/memcached/commits/1.5.11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/memcached/memcached/commits/1.5.11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;
  

&lt;pre&gt;&lt;code&gt;     2	dormando
     1	Nick Frost&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;

  
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
